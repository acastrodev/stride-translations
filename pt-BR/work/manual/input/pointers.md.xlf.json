{
    "filename": "manual\\input\\pointers.md.xlf",
    "files": [
        {
            "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md": [
                [
                    "Pointers",
                    "",
                    "Pointers",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu1"
                    }
                ],
                [
                    "<x1\/>Beginner<x2\/>",
                    "",
                    "<x1\/>Beginner<x2\/>\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu2"
                    }
                ],
                [
                    "<x3\/>Programmer<x4\/>",
                    "",
                    "<x3\/>Programmer<x4\/>",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu2"
                    }
                ],
                [
                    "<g1>Pointers<\/g1> are points on the device screen corresponding to <g2>finger touches<\/g2>.",
                    "",
                    "<g1>Pointers<\/g1> are points on the device screen corresponding to <g2>finger touches<\/g2>.",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu3"
                    }
                ],
                [
                    "Devices with multi-touch functionality support multiple simultaneous pointers.",
                    "",
                    " Devices with multi-touch functionality support multiple simultaneous pointers.",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu3"
                    }
                ],
                [
                    "On desktop platforms, the left mouse button can be used to simulate pointers.",
                    "",
                    "On desktop platforms, the left mouse button can be used to simulate pointers.",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu4"
                    }
                ],
                [
                    "For more information about mouse input, see <g1>Mouse<\/g1>.",
                    "",
                    " For more information about mouse input, see <g1>Mouse<\/g1>.",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu4"
                    }
                ],
                [
                    "How Stride processes pointer input",
                    "",
                    "How Stride processes pointer input",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu5"
                    }
                ],
                [
                    "The user touches the screen or clicks the left mouse button.",
                    "",
                    "The user touches the screen or clicks the left mouse button.",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu6"
                    }
                ],
                [
                    "Stride creates a pointer.",
                    "",
                    "Stride creates a pointer.",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu7"
                    }
                ],
                [
                    "Stride assigns <g1>pointer ID<\/g1> to that pointer corresponding to a given finger.",
                    "",
                    "Stride assigns <g1>pointer ID<\/g1> to that pointer corresponding to a given finger.",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu8"
                    }
                ],
                [
                    "Every time the pointer is modified, Stride creates a new <g1>pointer event<\/g1> with that pointer.",
                    "",
                    "Every time the pointer is modified, Stride creates a new <g1>pointer event<\/g1> with that pointer.",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu9"
                    }
                ],
                [
                    "For each new finger, Stride creates a new pointer with a new pointer ID.",
                    "",
                    "For each new finger, Stride creates a new pointer with a new pointer ID.",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu10"
                    }
                ],
                [
                    "<x1\/>!Note<x2\/>",
                    "",
                    "<x1\/>!Note<x2\/>\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu11"
                    }
                ],
                [
                    "Each pointer event contains information about only one pointer.",
                    "",
                    "Each pointer event contains information about only one pointer.",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu11"
                    }
                ],
                [
                    "If several pointers are modified simultaneously in the same update, Stride creates a separate event for each pointer.",
                    "",
                    " If several pointers are modified simultaneously in the same update, Stride creates a separate event for each pointer.",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu11"
                    }
                ],
                [
                    "<x1\/>!Warning<x2\/>",
                    "",
                    "<x1\/>!Warning<x2\/>\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu12"
                    }
                ],
                [
                    "Each OS handles pointer modifications differently.",
                    "",
                    "Each OS handles pointer modifications differently.",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu12"
                    }
                ],
                [
                    "This means the same finger gesture can generate slightly different pointer event sequences across different platforms.",
                    "",
                    " This means the same finger gesture can generate slightly different pointer event sequences across different platforms.",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu12"
                    }
                ],
                [
                    "For example, Android doesn't create a new pointer event when a finger touches the screen but doesn't move.",
                    "",
                    " For example, Android doesn't create a new pointer event when a finger touches the screen but doesn't move.",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu12"
                    }
                ],
                [
                    "For more information, check your OS documentation.",
                    "",
                    " For more information, check your OS documentation.",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu12"
                    }
                ],
                [
                    "You can enable gesture recognition to detect gestures such as long presses and taps.",
                    "",
                    "You can enable gesture recognition to detect gestures such as long presses and taps.",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu13"
                    }
                ],
                [
                    "For more information, see <g1>Gestures<\/g1>.",
                    "",
                    " For more information, see <g1>Gestures<\/g1>.",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu13"
                    }
                ],
                [
                    "The PointerEvent class",
                    "",
                    "The PointerEvent class",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu14"
                    }
                ],
                [
                    "<g1>PointerEvent<\/g1> reports pointer events.",
                    "",
                    "<g1>PointerEvent<\/g1> reports pointer events.",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu15"
                    }
                ],
                [
                    "It contains the current <g2>pointer status<\/g2> and time information.",
                    "",
                    " It contains the current <g2>pointer status<\/g2> and time information.",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu15"
                    }
                ],
                [
                    "It is thrown every time the <g3>pointer<\/g3> is modified.",
                    "",
                    " It is thrown every time the <g3>pointer<\/g3> is modified.",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu15"
                    }
                ],
                [
                    "You can access the list of <g1>pointer events<\/g1> since the last update using <g2>InputManager.PointerEvents<\/g2>.",
                    "",
                    "You can access the list of <g1>pointer events<\/g1> since the last update using <g2>InputManager.PointerEvents<\/g2>.",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu16"
                    }
                ],
                [
                    "Stride lists pointer events in chronological order.",
                    "",
                    " Stride lists pointer events in chronological order.",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu16"
                    }
                ],
                [
                    "The list is cleared at every update, so you don't need to clear it manually.",
                    "",
                    " The list is cleared at every update, so you don't need to clear it manually.",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu16"
                    }
                ],
                [
                    "Get pointer information",
                    "",
                    "Get pointer information",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu17"
                    }
                ],
                [
                    "You can use the following properties to get information about the pointer that triggered the event:",
                    "",
                    "You can use the following properties to get information about the pointer that triggered the event:",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu18"
                    }
                ],
                [
                    "Property",
                    "",
                    "Property",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu19"
                    }
                ],
                [
                    "Description",
                    "",
                    "Description",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu20"
                    }
                ],
                [
                    "PointerEvent.PointerId",
                    "",
                    "<g1>PointerEvent.PointerId<\/g1>",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu21"
                    }
                ],
                [
                    "Indicates the ID of the pointer which triggered the event.",
                    "",
                    "Indicates the ID of the pointer which triggered the event.",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu22"
                    }
                ],
                [
                    "<x1\/>!Warning<x2\/>",
                    "",
                    "<x1\/>!Warning<x2\/>\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu23"
                    }
                ],
                [
                    "The ID of a pointer is valid only during a single <g1>Pressed->Moved->Released<\/g1> sequence of pointer events.",
                    "",
                    "The ID of a pointer is valid only during a single <g1>Pressed->Moved->Released<\/g1> sequence of pointer events.\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu23"
                    }
                ],
                [
                    "A finger can have different IDs each time it touches the screen (even if this happens very quickly).",
                    "",
                    "A finger can have different IDs each time it touches the screen (even if this happens very quickly).",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu23"
                    }
                ],
                [
                    "<x1\/>!Warning<x2\/>",
                    "",
                    "<x1\/>!Warning<x2\/>\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu24"
                    }
                ],
                [
                    "Each OS has its own way of assigning IDs to pointers.",
                    "",
                    "Each OS has its own way of assigning IDs to pointers.\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu24"
                    }
                ],
                [
                    "There's no relation between the pointer ID values and corresponding fingers.",
                    "",
                    "There's no relation between the pointer ID values and corresponding fingers.",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu24"
                    }
                ],
                [
                    "To check if a pointer event was triggered by a mouse or touch, use:",
                    "",
                    "To check if a pointer event was triggered by a mouse or touch, use:",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu25"
                    }
                ],
                [
                    "bool isTriggeredByMouse = event.Pointer is IMouseDevice",
                    "",
                    "bool isTriggeredByMouse = event.Pointer is IMouseDevice\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu26"
                    }
                ],
                [
                    "Get the pointer position",
                    "",
                    "Get the pointer position",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu27"
                    }
                ],
                [
                    "You can get the pointer position in normalized or absolute coordinates.",
                    "",
                    "You can get the pointer position in normalized or absolute coordinates.",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu28"
                    }
                ],
                [
                    "Normalized coordinates",
                    "",
                    "Normalized coordinates",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu29"
                    }
                ],
                [
                    "@'Stride.Input.PointerEvent.Position' returns the pointer position in <g1>normalized<\/g1> X and Y coordinates instead of actual screen sizes in pixels.",
                    "",
                    "@'Stride.Input.PointerEvent.Position' returns the pointer position in <g1>normalized<\/g1> X and Y coordinates instead of actual screen sizes in pixels.",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu30"
                    }
                ],
                [
                    "This means the pointer position adjusts to any resolution and you don't have to write separate code for different resolutions.",
                    "",
                    " This means the pointer position adjusts to any resolution and you don't have to write separate code for different resolutions.",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu30"
                    }
                ],
                [
                    "(0,0): the pointer is in the top-left corner of the screen",
                    "",
                    "(0,0): the pointer is in the top-left corner of the screen",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu31"
                    }
                ],
                [
                    "(1,1): the pointer is in the bottom-right corner of the screen",
                    "",
                    "(1,1): the pointer is in the bottom-right corner of the screen",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu32"
                    }
                ],
                [
                    "Absolute coordinates",
                    "",
                    "Absolute coordinates",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu33"
                    }
                ],
                [
                    "<g1>PointerEvent.AbsolutePosition<\/g1> returns the pointer position in absolute X and Y coordinates (the actual screen size in pixels).",
                    "",
                    "<g1>PointerEvent.AbsolutePosition<\/g1> returns the pointer position in absolute X and Y coordinates (the actual screen size in pixels).",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu34"
                    }
                ],
                [
                    "For example, if the pointer is in the top-left corner of the screen, the values are (0,0).",
                    "",
                    " For example, if the pointer is in the top-left corner of the screen, the values are (0,0).",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu34"
                    }
                ],
                [
                    "If the pointer is in the bottom-right corner, the values depends on the screen resolution (eg 1280, 720).",
                    "",
                    " If the pointer is in the bottom-right corner, the values depends on the screen resolution (eg 1280, 720).",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu34"
                    }
                ],
                [
                    "<x1\/>!Tip<x2\/>",
                    "",
                    "<x1\/>!Tip<x2\/>\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu35"
                    }
                ],
                [
                    "To get the actual size of the screen, access <g1>IPointerDevice.SurfaceSize<\/g1>.",
                    "",
                    "To get the actual size of the screen, access <g1>IPointerDevice.SurfaceSize<\/g1>.",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu35"
                    }
                ],
                [
                    "For example:",
                    "",
                    " For example:",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu35"
                    }
                ],
                [
                    "var surfaceSize = Input.Pointer.SurfaceSize;",
                    "",
                    "var surfaceSize = Input.Pointer.SurfaceSize;\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu36"
                    }
                ],
                [
                    "Get pointer events",
                    "",
                    "Get pointer events",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu37"
                    }
                ],
                [
                    "Use the <g1>PointerEvent.EventType<\/g1> to check the pointer events.",
                    "",
                    "Use the <g1>PointerEvent.EventType<\/g1> to check the pointer events.",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu38"
                    }
                ],
                [
                    "There are five types of pointer event:",
                    "",
                    "There are five types of pointer event:",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu39"
                    }
                ],
                [
                    "<g1>Pressed<\/g1>:",
                    "",
                    "<g1>Pressed<\/g1>:",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu40"
                    }
                ],
                [
                    "The finger touched the screen.",
                    "",
                    " The finger touched the screen.",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu40"
                    }
                ],
                [
                    "<g1>Moved<\/g1>:",
                    "",
                    "<g1>Moved<\/g1>:",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu41"
                    }
                ],
                [
                    "The finger moved along the screen.",
                    "",
                    " The finger moved along the screen.",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu41"
                    }
                ],
                [
                    "<g1>Released<\/g1>:",
                    "",
                    "<g1>Released<\/g1>:",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu42"
                    }
                ],
                [
                    "The finger left the screen.",
                    "",
                    " The finger left the screen.",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu42"
                    }
                ],
                [
                    "<g1>Canceled<\/g1>:",
                    "",
                    "<g1>Canceled<\/g1>:",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu43"
                    }
                ],
                [
                    "The pointer sequence was canceled.",
                    "",
                    " The pointer sequence was canceled.",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu43"
                    }
                ],
                [
                    "This can happen when the application is interrupted; for example, a phone app might be interrupted by an incoming phone call.",
                    "",
                    " This can happen when the application is interrupted; for example, a phone app might be interrupted by an incoming phone call.",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu43"
                    }
                ],
                [
                    "<x1\/>!Note<x2\/>",
                    "",
                    "<x1\/>!Note<x2\/>\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu44"
                    }
                ],
                [
                    "A sequence of pointer events for one pointer always starts with a <g1>Pressed<\/g1> event.",
                    "",
                    "A sequence of pointer events for one pointer always starts with a <g1>Pressed<\/g1> event.",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu44"
                    }
                ],
                [
                    "This might be followed by one or more <g2>Moved<\/g2> events, and always ends with a <g3>Released<\/g3> or <g4>Canceled<\/g4> event.",
                    "",
                    " This might be followed by one or more <g2>Moved<\/g2> events, and always ends with a <g3>Released<\/g3> or <g4>Canceled<\/g4> event.",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu44"
                    }
                ],
                [
                    "Get delta values",
                    "",
                    "Get delta values",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu45"
                    }
                ],
                [
                    "<g1>PointerEvent.DeltaTime<\/g1> gets the time elapsed from the previous @'Stride.Input.PointerEvent'.",
                    "",
                    "<g1>PointerEvent.DeltaTime<\/g1> gets the time elapsed from the previous @'Stride.Input.PointerEvent'.",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu46"
                    }
                ],
                [
                    "You can get the delta position in normalized or absolute coordinates.",
                    "",
                    "You can get the delta position in normalized or absolute coordinates.",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu47"
                    }
                ],
                [
                    "Normalized delta values",
                    "",
                    "Normalized delta values",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu48"
                    }
                ],
                [
                    "<g1>PointerEvent.DeltaPosition<\/g1> gets the change in position since the previous @'Stride.Input.PointerEvent' in <g2>normalized<\/g2> X,Y coordinates.",
                    "",
                    "<g1>PointerEvent.DeltaPosition<\/g1> gets the change in position since the previous @'Stride.Input.PointerEvent' in <g2>normalized<\/g2> X,Y coordinates.",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu49"
                    }
                ],
                [
                    "<x1\/>!Note<x2\/>",
                    "",
                    "<x1\/>!Note<x2\/>\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu50"
                    }
                ],
                [
                    "Delta values are always nulls at the beginning of the sequence of pointer events (ie when the <g1>pointer state<\/g1> is <g2>down<\/g2>).",
                    "",
                    "Delta values are always nulls at the beginning of the sequence of pointer events (ie when the <g1>pointer state<\/g1> is <g2>down<\/g2>).",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu50"
                    }
                ],
                [
                    "Absolute delta values",
                    "",
                    "Absolute delta values",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu51"
                    }
                ],
                [
                    "<g1>PointerEvent.DeltaPosition<\/g1> gets the change in position since the previous @'Stride.Input.PointerEvent' in <g2>absolute<\/g2> (X,Y) coordinates.",
                    "",
                    "<g1>PointerEvent.DeltaPosition<\/g1> gets the change in position since the previous @'Stride.Input.PointerEvent' in <g2>absolute<\/g2> (X,Y) coordinates.",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu52"
                    }
                ],
                [
                    "Example code",
                    "",
                    "Example code",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu53"
                    }
                ],
                [
                    "This script tracks the pointer movement and prints its positions:",
                    "",
                    "This script tracks the pointer movement and prints its positions:",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu54"
                    }
                ],
                [
                    "using System;",
                    "",
                    "using System;\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu55"
                    }
                ],
                [
                    "using System.Collections.Generic;",
                    "",
                    "using System.Collections.Generic;\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu55"
                    }
                ],
                [
                    "using System.Linq;",
                    "",
                    "using System.Linq;\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu55"
                    }
                ],
                [
                    "using System.Threading.Tasks;",
                    "",
                    "using System.Threading.Tasks;\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu55"
                    }
                ],
                [
                    "using Stride.Core.Mathematics;",
                    "",
                    "using Stride.Core.Mathematics;\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu55"
                    }
                ],
                [
                    "using Stride.Engine;",
                    "",
                    "using Stride.Engine;\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu55"
                    }
                ],
                [
                    "namespace Stride.Input.Tests",
                    "",
                    "\r\nnamespace Stride.Input.Tests\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu55"
                    }
                ],
                [
                    "{",
                    "",
                    "{\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu55"
                    }
                ],
                [
                    "public class PointerTestScript :",
                    "",
                    "    public class PointerTestScript :",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu55"
                    }
                ],
                [
                    "AsyncScript",
                    "",
                    " AsyncScript\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu55"
                    }
                ],
                [
                    "{",
                    "",
                    "    {\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu55"
                    }
                ],
                [
                    "public override async Task Execute()",
                    "",
                    "        public override async Task Execute()\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu55"
                    }
                ],
                [
                    "{",
                    "",
                    "        {\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu55"
                    }
                ],
                [
                    "var pointerPositions = new Dictionary<int, Vector2>();",
                    "",
                    "            var pointerPositions = new Dictionary<int, Vector2>();\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu55"
                    }
                ],
                [
                    "while (true)",
                    "",
                    "            while (true)\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu55"
                    }
                ],
                [
                    "{",
                    "",
                    "            {\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu55"
                    }
                ],
                [
                    "await Script.NextFrame();",
                    "",
                    "                await Script.NextFrame();\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu55"
                    }
                ],
                [
                    "foreach (var pointerEvent in Input.PointerEvents)",
                    "",
                    "                foreach (var pointerEvent in Input.PointerEvents)\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu55"
                    }
                ],
                [
                    "{",
                    "",
                    "                {\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu55"
                    }
                ],
                [
                    "switch (pointerEvent.EventType)",
                    "",
                    "                    switch (pointerEvent.EventType)\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu55"
                    }
                ],
                [
                    "{",
                    "",
                    "                    {\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu55"
                    }
                ],
                [
                    "case PointerEventType.Pressed:",
                    "",
                    "                    case PointerEventType.Pressed:\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu55"
                    }
                ],
                [
                    "pointerPositions[pointerEvent.PointerId] = pointerEvent.Position;",
                    "",
                    "                        pointerPositions[pointerEvent.PointerId] = pointerEvent.Position;\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu55"
                    }
                ],
                [
                    "break;",
                    "",
                    "                        break;\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu55"
                    }
                ],
                [
                    "case PointerEventType.Moved:",
                    "",
                    "                    case PointerEventType.Moved:\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu55"
                    }
                ],
                [
                    "pointerPositions[pointerEvent.PointerId] = pointerEvent.Position;",
                    "",
                    "                        pointerPositions[pointerEvent.PointerId] = pointerEvent.Position;\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu55"
                    }
                ],
                [
                    "break;",
                    "",
                    "                        break;\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu55"
                    }
                ],
                [
                    "case PointerEventType.Released:",
                    "",
                    "                    case PointerEventType.Released:\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu55"
                    }
                ],
                [
                    "case PointerEventType.Canceled:",
                    "",
                    "                    case PointerEventType.Canceled:\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu55"
                    }
                ],
                [
                    "pointerPositions.Remove(pointerEvent.PointerId);",
                    "",
                    "                        pointerPositions.Remove(pointerEvent.PointerId);\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu55"
                    }
                ],
                [
                    "break;",
                    "",
                    "                        break;\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu55"
                    }
                ],
                [
                    "default:",
                    "",
                    "                    default:\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu55"
                    }
                ],
                [
                    "throw new ArgumentOutOfRangeException();",
                    "",
                    "                        throw new ArgumentOutOfRangeException();\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu55"
                    }
                ],
                [
                    "}",
                    "",
                    "                    }\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu55"
                    }
                ],
                [
                    "}",
                    "",
                    "                }\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu55"
                    }
                ],
                [
                    "var positionsStr = pointerPositions.Values.Aggregate(\"\", (current, pointer) => current + (pointer.ToString() + \", \"));",
                    "",
                    "                var positionsStr = pointerPositions.Values.Aggregate(\"\", (current, pointer) => current + (pointer.ToString() + \", \"));\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu55"
                    }
                ],
                [
                    "Log.Info(\"There are currently {0} pointers on the screen located at {1}\", pointerPositions.Count, positionsStr);",
                    "",
                    "                Log.Info(\"There are currently {0} pointers on the screen located at {1}\", pointerPositions.Count, positionsStr);\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu55"
                    }
                ],
                [
                    "}",
                    "",
                    "            }\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu55"
                    }
                ],
                [
                    "}",
                    "",
                    "        }\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu55"
                    }
                ],
                [
                    "}",
                    "",
                    "    }\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu55"
                    }
                ],
                [
                    "}",
                    "",
                    "}\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu55"
                    }
                ],
                [
                    "See also",
                    "",
                    "See also",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu56"
                    }
                ],
                [
                    "Gestures",
                    "",
                    "<g1>Gestures<\/g1>",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu57"
                    }
                ],
                [
                    "Mouse",
                    "",
                    "<g1>Mouse<\/g1>",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu58"
                    }
                ],
                [
                    "Virtual buttons",
                    "",
                    "<g1>Virtual buttons<\/g1>",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu59"
                    }
                ],
                [
                    "Input overview",
                    "",
                    "<g1>Input overview<\/g1>",
                    "\/D:\/repos\/rr\/source\/manual\/input\/pointers.md",
                    {
                        "id": "tu60"
                    }
                ]
            ]
        }
    ],
    "seg_enabled": false
}