{
    "filename": "manual\\input\\keyboards.md.xlf",
    "files": [
        {
            "\/D:\/repos\/rr\/source\/manual\/input\/keyboards.md": [
                [
                    "Keyboards",
                    "",
                    "Keyboards",
                    "\/D:\/repos\/rr\/source\/manual\/input\/keyboards.md",
                    {
                        "id": "tu1"
                    }
                ],
                [
                    "<x1\/>Beginner<x2\/>",
                    "",
                    "<x1\/>Beginner<x2\/>\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/input\/keyboards.md",
                    {
                        "id": "tu2"
                    }
                ],
                [
                    "<x3\/>Programmer<x4\/>",
                    "",
                    "<x3\/>Programmer<x4\/>",
                    "\/D:\/repos\/rr\/source\/manual\/input\/keyboards.md",
                    {
                        "id": "tu2"
                    }
                ],
                [
                    "The <g1>keyboard<\/g1> is the most common input device for desktop games.",
                    "",
                    "The <g1>keyboard<\/g1> is the most common input device for desktop games.",
                    "\/D:\/repos\/rr\/source\/manual\/input\/keyboards.md",
                    {
                        "id": "tu3"
                    }
                ],
                [
                    "There are two ways to handle keyboard input in Stride:",
                    "",
                    " There are two ways to handle keyboard input in Stride:",
                    "\/D:\/repos\/rr\/source\/manual\/input\/keyboards.md",
                    {
                        "id": "tu3"
                    }
                ],
                [
                    "query <g1>key states<\/g1>",
                    "",
                    "query <g1>key states<\/g1>",
                    "\/D:\/repos\/rr\/source\/manual\/input\/keyboards.md",
                    {
                        "id": "tu4"
                    }
                ],
                [
                    "use <g1>KeyEvent<\/g1> lists",
                    "",
                    "use <g1>KeyEvent<\/g1> lists",
                    "\/D:\/repos\/rr\/source\/manual\/input\/keyboards.md",
                    {
                        "id": "tu5"
                    }
                ],
                [
                    "You can access both from the <g1>input<\/g1> base class.",
                    "",
                    "You can access both from the <g1>input<\/g1> base class.",
                    "\/D:\/repos\/rr\/source\/manual\/input\/keyboards.md",
                    {
                        "id": "tu6"
                    }
                ],
                [
                    "For more information about these options, see the <g2>input index<\/g2>",
                    "",
                    " For more information about these options, see the <g2>input index<\/g2>",
                    "\/D:\/repos\/rr\/source\/manual\/input\/keyboards.md",
                    {
                        "id": "tu6"
                    }
                ],
                [
                    "Check keyboard availability",
                    "",
                    "Check keyboard availability",
                    "\/D:\/repos\/rr\/source\/manual\/input\/keyboards.md",
                    {
                        "id": "tu7"
                    }
                ],
                [
                    "Before handling keyboard input, check whether a keyboard is connected using <g1>Input.HasKeyboard<\/g1>.",
                    "",
                    "Before handling keyboard input, check whether a keyboard is connected using <g1>Input.HasKeyboard<\/g1>.",
                    "\/D:\/repos\/rr\/source\/manual\/input\/keyboards.md",
                    {
                        "id": "tu8"
                    }
                ],
                [
                    "Get key states",
                    "",
                    "Get key states",
                    "\/D:\/repos\/rr\/source\/manual\/input\/keyboards.md",
                    {
                        "id": "tu9"
                    }
                ],
                [
                    "You can query <g1>key states<\/g1> and <g2>state changes<\/g2> with the following methods:",
                    "",
                    "You can query <g1>key states<\/g1> and <g2>state changes<\/g2> with the following methods:",
                    "\/D:\/repos\/rr\/source\/manual\/input\/keyboards.md",
                    {
                        "id": "tu10"
                    }
                ],
                [
                    "Method",
                    "",
                    "Method",
                    "\/D:\/repos\/rr\/source\/manual\/input\/keyboards.md",
                    {
                        "id": "tu11"
                    }
                ],
                [
                    "Description",
                    "",
                    "Description",
                    "\/D:\/repos\/rr\/source\/manual\/input\/keyboards.md",
                    {
                        "id": "tu12"
                    }
                ],
                [
                    "IsKeyDown(Keys)",
                    "",
                    "<g1>IsKeyDown(Keys)<\/g1>",
                    "\/D:\/repos\/rr\/source\/manual\/input\/keyboards.md",
                    {
                        "id": "tu13"
                    }
                ],
                [
                    "Checks if a specified key is in the <g1>down<\/g1> state.",
                    "",
                    "Checks if a specified key is in the <g1>down<\/g1> state.",
                    "\/D:\/repos\/rr\/source\/manual\/input\/keyboards.md",
                    {
                        "id": "tu14"
                    }
                ],
                [
                    "IsKeyPressed(Keys)",
                    "",
                    "<g1>IsKeyPressed(Keys)<\/g1>",
                    "\/D:\/repos\/rr\/source\/manual\/input\/keyboards.md",
                    {
                        "id": "tu15"
                    }
                ],
                [
                    "Checks if a specified key has been <g1>pressed<\/g1> since the last update.",
                    "",
                    "Checks if a specified key has been <g1>pressed<\/g1> since the last update.",
                    "\/D:\/repos\/rr\/source\/manual\/input\/keyboards.md",
                    {
                        "id": "tu16"
                    }
                ],
                [
                    "IsKeyReleased(Keys)",
                    "",
                    "<g1>IsKeyReleased(Keys)<\/g1>",
                    "\/D:\/repos\/rr\/source\/manual\/input\/keyboards.md",
                    {
                        "id": "tu17"
                    }
                ],
                [
                    "Checks if a specified key has been <g1>released<\/g1> since the last update.",
                    "",
                    "Checks if a specified key has been <g1>released<\/g1> since the last update.",
                    "\/D:\/repos\/rr\/source\/manual\/input\/keyboards.md",
                    {
                        "id": "tu18"
                    }
                ],
                [
                    "<x1\/>!Note<x2\/>",
                    "",
                    "<x1\/>!Note<x2\/>\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/input\/keyboards.md",
                    {
                        "id": "tu19"
                    }
                ],
                [
                    "Stride doesn't support retrieving interpreted keys, such as special characters and capital letters.",
                    "",
                    "Stride doesn't support retrieving interpreted keys, such as special characters and capital letters.",
                    "\/D:\/repos\/rr\/source\/manual\/input\/keyboards.md",
                    {
                        "id": "tu19"
                    }
                ],
                [
                    "Get key events",
                    "",
                    "Get key events",
                    "\/D:\/repos\/rr\/source\/manual\/input\/keyboards.md",
                    {
                        "id": "tu20"
                    }
                ],
                [
                    "In some cases, you want to know all the keys that are currently <g1>Down<\/g1>, or all the keys that have been <g2>Pressed<\/g2> since the last update.",
                    "",
                    "In some cases, you want to know all the keys that are currently <g1>Down<\/g1>, or all the keys that have been <g2>Pressed<\/g2> since the last update.",
                    "\/D:\/repos\/rr\/source\/manual\/input\/keyboards.md",
                    {
                        "id": "tu21"
                    }
                ],
                [
                    "The key state API isn't good for this situation, as you have to query each available key separately.",
                    "",
                    " The key state API isn't good for this situation, as you have to query each available key separately.",
                    "\/D:\/repos\/rr\/source\/manual\/input\/keyboards.md",
                    {
                        "id": "tu21"
                    }
                ],
                [
                    "Instead, use the <g1>key events<\/g1> collections available in the <g2>Input<\/g2> base class.",
                    "",
                    "Instead, use the <g1>key events<\/g1> collections available in the <g2>Input<\/g2> base class.",
                    "\/D:\/repos\/rr\/source\/manual\/input\/keyboards.md",
                    {
                        "id": "tu22"
                    }
                ],
                [
                    "Public List",
                    "",
                    "Public List",
                    "\/D:\/repos\/rr\/source\/manual\/input\/keyboards.md",
                    {
                        "id": "tu23"
                    }
                ],
                [
                    "Description l",
                    "",
                    "Description l",
                    "\/D:\/repos\/rr\/source\/manual\/input\/keyboards.md",
                    {
                        "id": "tu24"
                    }
                ],
                [
                    "InputManager.DownKeys",
                    "",
                    "<g1>InputManager.DownKeys<\/g1>",
                    "\/D:\/repos\/rr\/source\/manual\/input\/keyboards.md",
                    {
                        "id": "tu25"
                    }
                ],
                [
                    "Gets a list of the keys that were down in the last update.",
                    "",
                    "Gets a list of the keys that were down in the last update.",
                    "\/D:\/repos\/rr\/source\/manual\/input\/keyboards.md",
                    {
                        "id": "tu26"
                    }
                ],
                [
                    "InputManager.PressedKeys",
                    "",
                    "<g1>InputManager.PressedKeys<\/g1>",
                    "\/D:\/repos\/rr\/source\/manual\/input\/keyboards.md",
                    {
                        "id": "tu27"
                    }
                ],
                [
                    "Gets a list of the keys pressed in the last update.",
                    "",
                    "Gets a list of the keys pressed in the last update.",
                    "\/D:\/repos\/rr\/source\/manual\/input\/keyboards.md",
                    {
                        "id": "tu28"
                    }
                ],
                [
                    "InputManager.ReleasedKeys",
                    "",
                    "<g1>InputManager.ReleasedKeys<\/g1>",
                    "\/D:\/repos\/rr\/source\/manual\/input\/keyboards.md",
                    {
                        "id": "tu29"
                    }
                ],
                [
                    "Gets a list of the keys released in the last update.",
                    "",
                    "Gets a list of the keys released in the last update.",
                    "\/D:\/repos\/rr\/source\/manual\/input\/keyboards.md",
                    {
                        "id": "tu30"
                    }
                ],
                [
                    "InputManager.KeyEvents",
                    "",
                    "<g1>InputManager.KeyEvents<\/g1>",
                    "\/D:\/repos\/rr\/source\/manual\/input\/keyboards.md",
                    {
                        "id": "tu31"
                    }
                ],
                [
                    "Gets a list of the key events in the last update (keys pressed or released).",
                    "",
                    "Gets a list of the key events in the last update (keys pressed or released).",
                    "\/D:\/repos\/rr\/source\/manual\/input\/keyboards.md",
                    {
                        "id": "tu32"
                    }
                ],
                [
                    "Every @'Stride.Input.KeyEvent' has two properties:",
                    "",
                    "Every @'Stride.Input.KeyEvent' has two properties:",
                    "\/D:\/repos\/rr\/source\/manual\/input\/keyboards.md",
                    {
                        "id": "tu33"
                    }
                ],
                [
                    "@'Stride.Input.KeyEvent.Key' (the affected key) and @'Stride.Input.ButtonEvent.IsDown' (the new state of the key).",
                    "",
                    " @'Stride.Input.KeyEvent.Key' (the affected key) and @'Stride.Input.ButtonEvent.IsDown' (the new state of the key).",
                    "\/D:\/repos\/rr\/source\/manual\/input\/keyboards.md",
                    {
                        "id": "tu33"
                    }
                ],
                [
                    "Example code",
                    "",
                    "Example code",
                    "\/D:\/repos\/rr\/source\/manual\/input\/keyboards.md",
                    {
                        "id": "tu34"
                    }
                ],
                [
                    "public class KeyboardEventsScript :",
                    "",
                    "public class KeyboardEventsScript :",
                    "\/D:\/repos\/rr\/source\/manual\/input\/keyboards.md",
                    {
                        "id": "tu35"
                    }
                ],
                [
                    "SyncScript",
                    "",
                    " SyncScript\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/input\/keyboards.md",
                    {
                        "id": "tu35"
                    }
                ],
                [
                    "{",
                    "",
                    "{\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/input\/keyboards.md",
                    {
                        "id": "tu35"
                    }
                ],
                [
                    "\/\/Declared public member variables and properties show in Game Studio.",
                    "",
                    "\t\/\/Declared public member variables and properties show in Game Studio.\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/input\/keyboards.md",
                    {
                        "id": "tu35"
                    }
                ],
                [
                    "public override void Update()",
                    "",
                    "\r\n\tpublic override void Update()\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/input\/keyboards.md",
                    {
                        "id": "tu35"
                    }
                ],
                [
                    "{",
                    "",
                    "\t{\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/input\/keyboards.md",
                    {
                        "id": "tu35"
                    }
                ],
                [
                    "\/\/Perform an action in every update.",
                    "",
                    "\t\t\/\/Perform an action in every update.\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/input\/keyboards.md",
                    {
                        "id": "tu35"
                    }
                ],
                [
                    "if (Game.IsRunning)",
                    "",
                    "\t\tif (Game.IsRunning)\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/input\/keyboards.md",
                    {
                        "id": "tu35"
                    }
                ],
                [
                    "{",
                    "",
                    "\t\t{\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/input\/keyboards.md",
                    {
                        "id": "tu35"
                    }
                ],
                [
                    "if (Input.IsKeyDown(Keys.Left))",
                    "",
                    "\t\t\tif (Input.IsKeyDown(Keys.Left))\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/input\/keyboards.md",
                    {
                        "id": "tu35"
                    }
                ],
                [
                    "{",
                    "",
                    "\t\t\t{\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/input\/keyboards.md",
                    {
                        "id": "tu35"
                    }
                ],
                [
                    "this.Entity.Transform.Position.X -= 0.1f;",
                    "",
                    "\t\t\t\tthis.Entity.Transform.Position.X -= 0.1f;\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/input\/keyboards.md",
                    {
                        "id": "tu35"
                    }
                ],
                [
                    "}",
                    "",
                    "\t\t\t}\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/input\/keyboards.md",
                    {
                        "id": "tu35"
                    }
                ],
                [
                    "if (Input.IsKeyDown(Keys.Right))",
                    "",
                    "\t\t\tif (Input.IsKeyDown(Keys.Right))\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/input\/keyboards.md",
                    {
                        "id": "tu35"
                    }
                ],
                [
                    "{",
                    "",
                    "\t\t\t{\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/input\/keyboards.md",
                    {
                        "id": "tu35"
                    }
                ],
                [
                    "this.Entity.Transform.Position.X += 0.1f;",
                    "",
                    "\t\t\t\tthis.Entity.Transform.Position.X += 0.1f;\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/input\/keyboards.md",
                    {
                        "id": "tu35"
                    }
                ],
                [
                    "}",
                    "",
                    "\t\t\t}\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/input\/keyboards.md",
                    {
                        "id": "tu35"
                    }
                ],
                [
                    "}",
                    "",
                    "\t\t}\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/input\/keyboards.md",
                    {
                        "id": "tu35"
                    }
                ],
                [
                    "}",
                    "",
                    "\t}\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/input\/keyboards.md",
                    {
                        "id": "tu35"
                    }
                ],
                [
                    "}",
                    "",
                    "}\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/input\/keyboards.md",
                    {
                        "id": "tu35"
                    }
                ],
                [
                    "See also",
                    "",
                    "See also",
                    "\/D:\/repos\/rr\/source\/manual\/input\/keyboards.md",
                    {
                        "id": "tu36"
                    }
                ],
                [
                    "Gamepads",
                    "",
                    "<g1>Gamepads<\/g1>",
                    "\/D:\/repos\/rr\/source\/manual\/input\/keyboards.md",
                    {
                        "id": "tu37"
                    }
                ],
                [
                    "Mouse",
                    "",
                    "<g1>Mouse<\/g1>",
                    "\/D:\/repos\/rr\/source\/manual\/input\/keyboards.md",
                    {
                        "id": "tu38"
                    }
                ],
                [
                    "Virtual buttons",
                    "",
                    "<g1>Virtual buttons<\/g1>",
                    "\/D:\/repos\/rr\/source\/manual\/input\/keyboards.md",
                    {
                        "id": "tu39"
                    }
                ],
                [
                    "Input overview",
                    "",
                    "<g1>Input overview<\/g1>",
                    "\/D:\/repos\/rr\/source\/manual\/input\/keyboards.md",
                    {
                        "id": "tu40"
                    }
                ]
            ]
        }
    ],
    "seg_enabled": false
}