{
    "filename": "manual\\physics\\raycasting.md.xlf",
    "files": [
        {
            "\/D:\/repos\/stride-translations\/pt-BR\/source\/manual\/physics\/raycasting.md": [
                [
                    "Raycasting",
                    "",
                    "Raycasting",
                    "\/D:\/repos\/stride-translations\/pt-BR\/source\/manual\/physics\/raycasting.md",
                    {
                        "id": "tu1"
                    }
                ],
                [
                    "<x1\/>Intermediate<x2\/>",
                    "",
                    "<x1\/>Intermediate<x2\/>\r\n",
                    "\/D:\/repos\/stride-translations\/pt-BR\/source\/manual\/physics\/raycasting.md",
                    {
                        "id": "tu2"
                    }
                ],
                [
                    "<x3\/>Programmer<x4\/>",
                    "",
                    "<x3\/>Programmer<x4\/>",
                    "\/D:\/repos\/stride-translations\/pt-BR\/source\/manual\/physics\/raycasting.md",
                    {
                        "id": "tu2"
                    }
                ],
                [
                    "<g1>Raycasting<\/g1> traces an invisible line through the scene to find intersecting <g2>colliders<\/g2>.",
                    "",
                    "<g1>Raycasting<\/g1> traces an invisible line through the scene to find intersecting <g2>colliders<\/g2>.",
                    "\/D:\/repos\/stride-translations\/pt-BR\/source\/manual\/physics\/raycasting.md",
                    {
                        "id": "tu3"
                    }
                ],
                [
                    "This is useful, for example, to check which objects are in a gun's line of fire, or are under the mouse cursor when the user clicks.",
                    "",
                    " This is useful, for example, to check which objects are in a gun's line of fire, or are under the mouse cursor when the user clicks.",
                    "\/D:\/repos\/stride-translations\/pt-BR\/source\/manual\/physics\/raycasting.md",
                    {
                        "id": "tu3"
                    }
                ],
                [
                    "<x1\/>!Note<x2\/>",
                    "",
                    "<x1\/>!Note<x2\/>\r\n",
                    "\/D:\/repos\/stride-translations\/pt-BR\/source\/manual\/physics\/raycasting.md",
                    {
                        "id": "tu4"
                    }
                ],
                [
                    "Raycasting uses <g1>colliders<\/g1> to calculate intersections.",
                    "",
                    "Raycasting uses <g1>colliders<\/g1> to calculate intersections.",
                    "\/D:\/repos\/stride-translations\/pt-BR\/source\/manual\/physics\/raycasting.md",
                    {
                        "id": "tu4"
                    }
                ],
                [
                    "It ignores entities that have no collider component.",
                    "",
                    " It ignores entities that have no collider component.",
                    "\/D:\/repos\/stride-translations\/pt-BR\/source\/manual\/physics\/raycasting.md",
                    {
                        "id": "tu4"
                    }
                ],
                [
                    "For more information, see <g2>Colliders<\/g2>.",
                    "",
                    " For more information, see <g2>Colliders<\/g2>.",
                    "\/D:\/repos\/stride-translations\/pt-BR\/source\/manual\/physics\/raycasting.md",
                    {
                        "id": "tu4"
                    }
                ],
                [
                    "To use a raycast, in the current <g1>Simulation<\/g1>, use <x1\/>Simulation.Raycast<x2\/>(xref:Stride.Physics.Simulation.Raycast(Vector3, Vector3, CollisionFilterGroups, CollisionFilterGroupFlags, bool)).",
                    "",
                    "To use a raycast, in the current <g1>Simulation<\/g1>, use <x1\/>Simulation.Raycast<x2\/>(xref:Stride.Physics.Simulation.Raycast(Vector3, Vector3, CollisionFilterGroups, CollisionFilterGroupFlags, bool)).",
                    "\/D:\/repos\/stride-translations\/pt-BR\/source\/manual\/physics\/raycasting.md",
                    {
                        "id": "tu5"
                    }
                ],
                [
                    "For an example of raycasting, see the <g1>Physics Sample<\/g1> project included with Stride.",
                    "",
                    "For an example of raycasting, see the <g1>Physics Sample<\/g1> project included with Stride.",
                    "\/D:\/repos\/stride-translations\/pt-BR\/source\/manual\/physics\/raycasting.md",
                    {
                        "id": "tu6"
                    }
                ],
                [
                    "Example code",
                    "",
                    "Example code",
                    "\/D:\/repos\/stride-translations\/pt-BR\/source\/manual\/physics\/raycasting.md",
                    {
                        "id": "tu7"
                    }
                ],
                [
                    "This code sends a raycast from the mouse's screen position:",
                    "",
                    "This code sends a raycast from the mouse's screen position:",
                    "\/D:\/repos\/stride-translations\/pt-BR\/source\/manual\/physics\/raycasting.md",
                    {
                        "id": "tu8"
                    }
                ],
                [
                    "public static bool ScreenPositionToWorldPositionRaycast(Vector2 screenPos, CameraComponent camera, Simulation simulation)",
                    "",
                    "public static bool ScreenPositionToWorldPositionRaycast(Vector2 screenPos, CameraComponent camera, Simulation simulation)\r\n",
                    "\/D:\/repos\/stride-translations\/pt-BR\/source\/manual\/physics\/raycasting.md",
                    {
                        "id": "tu9"
                    }
                ],
                [
                    "{",
                    "",
                    "{\r\n",
                    "\/D:\/repos\/stride-translations\/pt-BR\/source\/manual\/physics\/raycasting.md",
                    {
                        "id": "tu9"
                    }
                ],
                [
                    "Matrix invViewProj = Matrix.Invert(camera.ViewProjectionMatrix);",
                    "",
                    "    Matrix invViewProj = Matrix.Invert(camera.ViewProjectionMatrix);\r\n",
                    "\/D:\/repos\/stride-translations\/pt-BR\/source\/manual\/physics\/raycasting.md",
                    {
                        "id": "tu9"
                    }
                ],
                [
                    "\/\/ Reconstruct the projection-space position in the (-1, +1) range.",
                    "",
                    "\r\n    \/\/ Reconstruct the projection-space position in the (-1, +1) range.\r\n",
                    "\/D:\/repos\/stride-translations\/pt-BR\/source\/manual\/physics\/raycasting.md",
                    {
                        "id": "tu9"
                    }
                ],
                [
                    "\/\/    Don't forget that Y is down in screen coordinates, but up in projection space",
                    "",
                    "    \/\/    Don't forget that Y is down in screen coordinates, but up in projection space\r\n",
                    "\/D:\/repos\/stride-translations\/pt-BR\/source\/manual\/physics\/raycasting.md",
                    {
                        "id": "tu9"
                    }
                ],
                [
                    "Vector3 sPos;",
                    "",
                    "    Vector3 sPos;\r\n",
                    "\/D:\/repos\/stride-translations\/pt-BR\/source\/manual\/physics\/raycasting.md",
                    {
                        "id": "tu9"
                    }
                ],
                [
                    "sPos.X = screenPos.X * 2f - 1f;",
                    "",
                    "    sPos.X = screenPos.X * 2f - 1f;\r\n",
                    "\/D:\/repos\/stride-translations\/pt-BR\/source\/manual\/physics\/raycasting.md",
                    {
                        "id": "tu9"
                    }
                ],
                [
                    "sPos.Y = 1f - screenPos.Y * 2f;",
                    "",
                    "    sPos.Y = 1f - screenPos.Y * 2f;\r\n",
                    "\/D:\/repos\/stride-translations\/pt-BR\/source\/manual\/physics\/raycasting.md",
                    {
                        "id": "tu9"
                    }
                ],
                [
                    "\/\/ Compute the near (start) point for the raycast",
                    "",
                    "\r\n    \/\/ Compute the near (start) point for the raycast\r\n",
                    "\/D:\/repos\/stride-translations\/pt-BR\/source\/manual\/physics\/raycasting.md",
                    {
                        "id": "tu9"
                    }
                ],
                [
                    "\/\/ It's assumed to have the same projection space (x,y) coordinates and z = 0 (lying on the near plane)",
                    "",
                    "    \/\/ It's assumed to have the same projection space (x,y) coordinates and z = 0 (lying on the near plane)\r\n",
                    "\/D:\/repos\/stride-translations\/pt-BR\/source\/manual\/physics\/raycasting.md",
                    {
                        "id": "tu9"
                    }
                ],
                [
                    "\/\/ We need to unproject it to world space",
                    "",
                    "    \/\/ We need to unproject it to world space\r\n",
                    "\/D:\/repos\/stride-translations\/pt-BR\/source\/manual\/physics\/raycasting.md",
                    {
                        "id": "tu9"
                    }
                ],
                [
                    "sPos.Z = 0f;",
                    "",
                    "    sPos.Z = 0f;\r\n",
                    "\/D:\/repos\/stride-translations\/pt-BR\/source\/manual\/physics\/raycasting.md",
                    {
                        "id": "tu9"
                    }
                ],
                [
                    "var vectorNear = Vector3.Transform(sPos, invViewProj);",
                    "",
                    "    var vectorNear = Vector3.Transform(sPos, invViewProj);\r\n",
                    "\/D:\/repos\/stride-translations\/pt-BR\/source\/manual\/physics\/raycasting.md",
                    {
                        "id": "tu9"
                    }
                ],
                [
                    "vectorNear \/= vectorNear.W;",
                    "",
                    "    vectorNear \/= vectorNear.W;\r\n",
                    "\/D:\/repos\/stride-translations\/pt-BR\/source\/manual\/physics\/raycasting.md",
                    {
                        "id": "tu9"
                    }
                ],
                [
                    "\/\/ Compute the far (end) point for the raycast",
                    "",
                    "\r\n    \/\/ Compute the far (end) point for the raycast\r\n",
                    "\/D:\/repos\/stride-translations\/pt-BR\/source\/manual\/physics\/raycasting.md",
                    {
                        "id": "tu9"
                    }
                ],
                [
                    "\/\/ It's assumed to have the same projection space (x,y) coordinates and z = 1 (lying on the far plane)",
                    "",
                    "    \/\/ It's assumed to have the same projection space (x,y) coordinates and z = 1 (lying on the far plane)\r\n",
                    "\/D:\/repos\/stride-translations\/pt-BR\/source\/manual\/physics\/raycasting.md",
                    {
                        "id": "tu9"
                    }
                ],
                [
                    "\/\/ We need to unproject it to world space",
                    "",
                    "    \/\/ We need to unproject it to world space\r\n",
                    "\/D:\/repos\/stride-translations\/pt-BR\/source\/manual\/physics\/raycasting.md",
                    {
                        "id": "tu9"
                    }
                ],
                [
                    "sPos.Z = 1f;",
                    "",
                    "    sPos.Z = 1f;\r\n",
                    "\/D:\/repos\/stride-translations\/pt-BR\/source\/manual\/physics\/raycasting.md",
                    {
                        "id": "tu9"
                    }
                ],
                [
                    "var vectorFar = Vector3.Transform(sPos, invViewProj);",
                    "",
                    "    var vectorFar = Vector3.Transform(sPos, invViewProj);\r\n",
                    "\/D:\/repos\/stride-translations\/pt-BR\/source\/manual\/physics\/raycasting.md",
                    {
                        "id": "tu9"
                    }
                ],
                [
                    "vectorFar \/= vectorFar.W;",
                    "",
                    "    vectorFar \/= vectorFar.W;\r\n",
                    "\/D:\/repos\/stride-translations\/pt-BR\/source\/manual\/physics\/raycasting.md",
                    {
                        "id": "tu9"
                    }
                ],
                [
                    "\/\/ Raycast from the point on the near plane to the point on the far plane and get the collision result",
                    "",
                    "\r\n    \/\/ Raycast from the point on the near plane to the point on the far plane and get the collision result\r\n",
                    "\/D:\/repos\/stride-translations\/pt-BR\/source\/manual\/physics\/raycasting.md",
                    {
                        "id": "tu9"
                    }
                ],
                [
                    "var result = simulation.Raycast(vectorNear.XYZ(), vectorFar.XYZ());",
                    "",
                    "    var result = simulation.Raycast(vectorNear.XYZ(), vectorFar.XYZ());\r\n",
                    "\/D:\/repos\/stride-translations\/pt-BR\/source\/manual\/physics\/raycasting.md",
                    {
                        "id": "tu9"
                    }
                ],
                [
                    "return result.Succeeded;",
                    "",
                    "    return result.Succeeded;\r\n",
                    "\/D:\/repos\/stride-translations\/pt-BR\/source\/manual\/physics\/raycasting.md",
                    {
                        "id": "tu9"
                    }
                ],
                [
                    "}",
                    "",
                    "}\r\n",
                    "\/D:\/repos\/stride-translations\/pt-BR\/source\/manual\/physics\/raycasting.md",
                    {
                        "id": "tu9"
                    }
                ],
                [
                    "<x1\/>!Note<x2\/>",
                    "",
                    "<x1\/>!Note<x2\/>\r\n",
                    "\/D:\/repos\/stride-translations\/pt-BR\/source\/manual\/physics\/raycasting.md",
                    {
                        "id": "tu10"
                    }
                ],
                [
                    "There are multiple ways to retrieve a reference to this <g1>Simulation<\/g1> from inside one of your <g2>ScriptComponent<\/g2>:",
                    "",
                    "There are multiple ways to retrieve a reference to this <g1>Simulation<\/g1> from inside one of your <g2>ScriptComponent<\/g2>:",
                    "\/D:\/repos\/stride-translations\/pt-BR\/source\/manual\/physics\/raycasting.md",
                    {
                        "id": "tu10"
                    }
                ],
                [
                    "The recommended way is through a reference to a physics component, something like <g1>myRigidBody.Simulation<\/g1> or <g2>myCollision.Simulation<\/g2> as it is the fastest.",
                    "",
                    "The recommended way is through a reference to a physics component, something like <g1>myRigidBody.Simulation<\/g1> or <g2>myCollision.Simulation<\/g2> as it is the fastest.",
                    "\/D:\/repos\/stride-translations\/pt-BR\/source\/manual\/physics\/raycasting.md",
                    {
                        "id": "tu11"
                    }
                ],
                [
                    "Then through <g1>SceneSystem<\/g1> by calling <g2>SceneSystem.SceneInstance.GetProcessor<PhysicsProcessor>()?.Simulation<\/g2>.",
                    "",
                    "Then through <g1>SceneSystem<\/g1> by calling <g2>SceneSystem.SceneInstance.GetProcessor<PhysicsProcessor>()?.Simulation<\/g2>.",
                    "\/D:\/repos\/stride-translations\/pt-BR\/source\/manual\/physics\/raycasting.md",
                    {
                        "id": "tu12"
                    }
                ],
                [
                    "Or through <g1>this.GetSimulation()<\/g1>, note that the <g2>this<\/g2> is required as it is an extension method.",
                    "",
                    "Or through <g1>this.GetSimulation()<\/g1>, note that the <g2>this<\/g2> is required as it is an extension method.",
                    "\/D:\/repos\/stride-translations\/pt-BR\/source\/manual\/physics\/raycasting.md",
                    {
                        "id": "tu13"
                    }
                ],
                [
                    "See also",
                    "",
                    "See also",
                    "\/D:\/repos\/stride-translations\/pt-BR\/source\/manual\/physics\/raycasting.md",
                    {
                        "id": "tu14"
                    }
                ],
                [
                    "Colliders",
                    "",
                    "<g1>Colliders<\/g1>",
                    "\/D:\/repos\/stride-translations\/pt-BR\/source\/manual\/physics\/raycasting.md",
                    {
                        "id": "tu15"
                    }
                ]
            ]
        }
    ],
    "seg_enabled": false
}