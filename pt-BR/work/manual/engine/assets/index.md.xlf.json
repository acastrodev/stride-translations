{
    "filename": "manual\\engine\\assets\\index.md.xlf",
    "files": [
        {
            "\/D:\/repos\/rr\/source\/manual\/engine\/assets\/index.md": [
                [
                    "Asset manager",
                    "",
                    "Asset manager",
                    "\/D:\/repos\/rr\/source\/manual\/engine\/assets\/index.md",
                    {
                        "id": "tu1"
                    }
                ],
                [
                    "<x1\/>!Warning<x2\/>",
                    "",
                    "<x1\/>!Warning<x2\/>\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/engine\/assets\/index.md",
                    {
                        "id": "tu2"
                    }
                ],
                [
                    "This section is out of date.",
                    "",
                    "This section is out of date.",
                    "\/D:\/repos\/rr\/source\/manual\/engine\/assets\/index.md",
                    {
                        "id": "tu2"
                    }
                ],
                [
                    "For now, you should only use it for reference.",
                    "",
                    " For now, you should only use it for reference.",
                    "\/D:\/repos\/rr\/source\/manual\/engine\/assets\/index.md",
                    {
                        "id": "tu2"
                    }
                ],
                [
                    "Assets",
                    "",
                    "Assets",
                    "\/D:\/repos\/rr\/source\/manual\/engine\/assets\/index.md",
                    {
                        "id": "tu3"
                    }
                ],
                [
                    "After creating your assets in Game Studio, @'Stride.Core.Serialization.Assets.AssetManager' is the class responsible for loading, unloading and saving assets.",
                    "",
                    "After creating your assets in Game Studio, @'Stride.Core.Serialization.Assets.AssetManager' is the class responsible for loading, unloading and saving assets.",
                    "\/D:\/repos\/rr\/source\/manual\/engine\/assets\/index.md",
                    {
                        "id": "tu4"
                    }
                ],
                [
                    "Creating",
                    "",
                    "Creating",
                    "\/D:\/repos\/rr\/source\/manual\/engine\/assets\/index.md",
                    {
                        "id": "tu5"
                    }
                ],
                [
                    "You usually create assets directly in Game Studio.",
                    "",
                    "You usually create assets directly in Game Studio.",
                    "\/D:\/repos\/rr\/source\/manual\/engine\/assets\/index.md",
                    {
                        "id": "tu6"
                    }
                ],
                [
                    "Their URL will match the name (including folder) in Game Studio.",
                    "",
                    "Their URL will match the name (including folder) in Game Studio.",
                    "\/D:\/repos\/rr\/source\/manual\/engine\/assets\/index.md",
                    {
                        "id": "tu7"
                    }
                ],
                [
                    "Examples of URLs:",
                    "",
                    "Examples of URLs:",
                    "\/D:\/repos\/rr\/source\/manual\/engine\/assets\/index.md",
                    {
                        "id": "tu8"
                    }
                ],
                [
                    "knight (user imports knight.fbx directly in main asset folder)",
                    "",
                    "knight (user imports knight.fbx directly in main asset folder)",
                    "\/D:\/repos\/rr\/source\/manual\/engine\/assets\/index.md",
                    {
                        "id": "tu9"
                    }
                ],
                [
                    "level1\/room1 (user creates level1 and import room1.fbx inside)",
                    "",
                    "level1\/room1 (user creates level1 and import room1.fbx inside)",
                    "\/D:\/repos\/rr\/source\/manual\/engine\/assets\/index.md",
                    {
                        "id": "tu10"
                    }
                ],
                [
                    "For more information, see <g1>Assets<\/g1> for more details.",
                    "",
                    "For more information, see <g1>Assets<\/g1> for more details.",
                    "\/D:\/repos\/rr\/source\/manual\/engine\/assets\/index.md",
                    {
                        "id": "tu11"
                    }
                ],
                [
                    "Loading",
                    "",
                    "Loading",
                    "\/D:\/repos\/rr\/source\/manual\/engine\/assets\/index.md",
                    {
                        "id": "tu12"
                    }
                ],
                [
                    "Loading an asset should be done with the help of @'Stride.Core.Serialization.Assets.AssetManager' class:",
                    "",
                    "Loading an asset should be done with the help of @'Stride.Core.Serialization.Assets.AssetManager' class:",
                    "\/D:\/repos\/rr\/source\/manual\/engine\/assets\/index.md",
                    {
                        "id": "tu13"
                    }
                ],
                [
                    "\/\/ Load an asset directly from a file:",
                    "",
                    "\/\/ Load an asset directly from a file:\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/engine\/assets\/index.md",
                    {
                        "id": "tu14"
                    }
                ],
                [
                    "var texture = Content.Load<Texture>(\"texture1\");",
                    "",
                    "var texture = Content.Load<Texture>(\"texture1\");\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/engine\/assets\/index.md",
                    {
                        "id": "tu14"
                    }
                ],
                [
                    "\/\/ Load a Scene asset",
                    "",
                    "\r\n\/\/ Load a Scene asset\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/engine\/assets\/index.md",
                    {
                        "id": "tu14"
                    }
                ],
                [
                    "var scene = Content.Load<Scene>(\"scenes\/scene1\");",
                    "",
                    "var scene = Content.Load<Scene>(\"scenes\/scene1\");\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/engine\/assets\/index.md",
                    {
                        "id": "tu14"
                    }
                ],
                [
                    "\/\/ Load an Entity asset",
                    "",
                    " \r\n\/\/ Load an Entity asset\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/engine\/assets\/index.md",
                    {
                        "id": "tu14"
                    }
                ],
                [
                    "var entity = Content.Load<Entity>(\"entity1\");",
                    "",
                    "var entity = Content.Load<Entity>(\"entity1\");\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/engine\/assets\/index.md",
                    {
                        "id": "tu14"
                    }
                ],
                [
                    "Note that loading an asset that has already been loaded only increment the reference counter and do not reload the asset.",
                    "",
                    "Note that loading an asset that has already been loaded only increment the reference counter and do not reload the asset.",
                    "\/D:\/repos\/rr\/source\/manual\/engine\/assets\/index.md",
                    {
                        "id": "tu15"
                    }
                ],
                [
                    "Unloading",
                    "",
                    "Unloading",
                    "\/D:\/repos\/rr\/source\/manual\/engine\/assets\/index.md",
                    {
                        "id": "tu16"
                    }
                ],
                [
                    "Unloading is also done using the AssetManager class:",
                    "",
                    "Unloading is also done using the AssetManager class:",
                    "\/D:\/repos\/rr\/source\/manual\/engine\/assets\/index.md",
                    {
                        "id": "tu17"
                    }
                ],
                [
                    "Asset.Unload(asset);",
                    "",
                    " Asset.Unload(asset);\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/engine\/assets\/index.md",
                    {
                        "id": "tu18"
                    }
                ],
                [
                    "Asset life time",
                    "",
                    "Asset life time",
                    "\/D:\/repos\/rr\/source\/manual\/engine\/assets\/index.md",
                    {
                        "id": "tu19"
                    }
                ],
                [
                    "Asset load and unload are working in pairs.",
                    "",
                    "Asset load and unload are working in pairs.",
                    "\/D:\/repos\/rr\/source\/manual\/engine\/assets\/index.md",
                    {
                        "id": "tu20"
                    }
                ],
                [
                    "For each call to 'load', a corresponding call to 'unload' is expected.",
                    "",
                    " For each call to 'load', a corresponding call to 'unload' is expected.",
                    "\/D:\/repos\/rr\/source\/manual\/engine\/assets\/index.md",
                    {
                        "id": "tu20"
                    }
                ],
                [
                    "An asset is actually loaded only during the first call to 'load'.",
                    "",
                    "An asset is actually loaded only during the first call to 'load'.",
                    "\/D:\/repos\/rr\/source\/manual\/engine\/assets\/index.md",
                    {
                        "id": "tu21"
                    }
                ],
                [
                    "All subsequent calls only result to an asset reference increment.",
                    "",
                    " All subsequent calls only result to an asset reference increment.",
                    "\/D:\/repos\/rr\/source\/manual\/engine\/assets\/index.md",
                    {
                        "id": "tu21"
                    }
                ],
                [
                    "An asset is actually unload only when the number of call to unload match the number of call the load.",
                    "",
                    "An asset is actually unload only when the number of call to unload match the number of call the load.",
                    "\/D:\/repos\/rr\/source\/manual\/engine\/assets\/index.md",
                    {
                        "id": "tu22"
                    }
                ],
                [
                    "The @'Stride.Core.Serialization.Assets.AssetManager.Get' method returns the reference to a loaded asset but does not increment the asset reference counter.",
                    "",
                    "The @'Stride.Core.Serialization.Assets.AssetManager.Get' method returns the reference to a loaded asset but does not increment the asset reference counter.",
                    "\/D:\/repos\/rr\/source\/manual\/engine\/assets\/index.md",
                    {
                        "id": "tu23"
                    }
                ],
                [
                    "var firstReference = Content.Load<Texture>(\"MyTexture\"); \/\/ load the asset and increase the reference counter (ref count = 1)",
                    "",
                    " var firstReference = Content.Load<Texture>(\"MyTexture\"); \/\/ load the asset and increase the reference counter (ref count = 1)\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/engine\/assets\/index.md",
                    {
                        "id": "tu24"
                    }
                ],
                [
                    "\/\/ the texture can be used here",
                    "",
                    " \r\n\/\/ the texture can be used here\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/engine\/assets\/index.md",
                    {
                        "id": "tu24"
                    }
                ],
                [
                    "var secondReference = Content.Load<Texture>(\"MyTexture\"); \/\/ only increase the reference counter (ref count = 2)",
                    "",
                    " \r\nvar secondReference = Content.Load<Texture>(\"MyTexture\"); \/\/ only increase the reference counter (ref count = 2)\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/engine\/assets\/index.md",
                    {
                        "id": "tu24"
                    }
                ],
                [
                    "\/\/ the texture can still be used here",
                    "",
                    " \r\n\/\/ the texture can still be used here\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/engine\/assets\/index.md",
                    {
                        "id": "tu24"
                    }
                ],
                [
                    "Asset.Unload(firstReference); \/\/ decrease the reference counter (ref count = 1)",
                    "",
                    " \r\nAsset.Unload(firstReference); \/\/ decrease the reference counter (ref count = 1)\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/engine\/assets\/index.md",
                    {
                        "id": "tu24"
                    }
                ],
                [
                    "\/\/ the texture can still be used here",
                    "",
                    " \r\n\/\/ the texture can still be used here\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/engine\/assets\/index.md",
                    {
                        "id": "tu24"
                    }
                ],
                [
                    "Asset.Get<Texture>(\"MyTexture\"); \/\/ return the loaded asset without increasing the reference counter (ref count = 1)",
                    "",
                    " \r\nAsset.Get<Texture>(\"MyTexture\"); \/\/ return the loaded asset without increasing the reference counter (ref count = 1)\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/engine\/assets\/index.md",
                    {
                        "id": "tu24"
                    }
                ],
                [
                    "\/\/ the texture can still be used here",
                    "",
                    " \r\n\/\/ the texture can still be used here\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/engine\/assets\/index.md",
                    {
                        "id": "tu24"
                    }
                ],
                [
                    "Asset.Unload(secondReference); \/\/ decrease the reference counter and unload the asset (ref count = 0)",
                    "",
                    "Asset.Unload(secondReference); \/\/ decrease the reference counter and unload the asset (ref count = 0)\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/engine\/assets\/index.md",
                    {
                        "id": "tu24"
                    }
                ],
                [
                    "\/\/ The texture has been unloaded, it cannot be used here any more.",
                    "",
                    " \r\n\/\/ The texture has been unloaded, it cannot be used here any more.\r\n",
                    "\/D:\/repos\/rr\/source\/manual\/engine\/assets\/index.md",
                    {
                        "id": "tu24"
                    }
                ]
            ]
        }
    ],
    "seg_enabled": false
}