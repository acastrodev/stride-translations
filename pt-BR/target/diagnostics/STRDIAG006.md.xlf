<?xml version="1.0" encoding="UTF-8" standalone="no"?><xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:its="http://www.w3.org/2005/11/its" xmlns:itsxlf="http://www.w3.org/ns/its-xliff/" xmlns:okp="okapi-framework:xliff-extensions" its:version="2.0" version="1.2">
<file datatype="x-text/x-markdown" okp:inputEncoding="UTF-8" original="/D:/repos/stride-docs/en/diagnostics/STRDIAG006.md" source-language="en" target-language="pt">
<body>
<trans-unit id="tu1" xml:space="preserve">
<source xml:lang="en">Diagnostics Warning STRDIAG006</source>
<target xml:lang="pt">Diagnosticando o aviso STRDIAG006</target>
</trans-unit>
<trans-unit id="tu2" xml:space="preserve">
<source xml:lang="en">Invalid DataMemberMode for the specified <g id="1">[DataMember]</g> member '{0}'. A public/internal/internal protected setter is required for 'DataMemberMode.Assign'.</source>
<target xml:lang="pt">Invalid DataMemberMode for the specified <g id="1">[DataMember]</g> member '{0}'. A public/internal/internal protected setter is required for 'DataMemberMode.Assign'.</target>
</trans-unit>
<trans-unit id="tu3" xml:space="preserve">
<source xml:lang="en">Explanation</source>
<target xml:lang="pt">Explanation</target>
</trans-unit>
<trans-unit id="tu4" xml:space="preserve">
<source xml:lang="en">The @Stride.Core.DataMemberMode.Assign let's the serializers create new objects and sets them into the target property. The Property needs an accessible/visible setter.</source>
<target xml:lang="pt">The @Stride.Core.DataMemberMode.Assign let's the serializers create new objects and sets them into the target property. The Property needs an accessible/visible setter.</target>
</trans-unit>
<trans-unit id="tu5" xml:space="preserve">
<source xml:lang="en">Example: Invalid Cases</source>
<target xml:lang="pt">Example: Invalid Cases</target>
</trans-unit>
<trans-unit id="tu6" xml:space="preserve">
<source xml:lang="en">The following example generates STRDIAG006:</source>
<target xml:lang="pt">The following example generates STRDIAG006:</target>
</trans-unit>
<trans-unit id="tu7" xml:space="preserve">
<source xml:lang="en">using Stride.Core;

public class STRDIAG006
{
    // non existent setters count as non visible
    [DataMember(DataMemberMode.Assign)]
    [DataMember(DataMemberMode.Assign)]
    public int Property1 { get; }

    [DataMember(DataMemberMode.Assign)]
    public int Property2 { get; private set; }
    
    [DataMember(DataMemberMode.Assign)]
    public int Property3 { get; protected set; }
    
    [DataMember(DataMemberMode.Assign)]
    public int Property4 { get; private protected set; }
}
</source>
<target xml:lang="pt">using Stride.Core;

public class STRDIAG006
{
    // non existent setters count as non visible
    [DataMember(DataMemberMode.Assign)]
    [DataMember(DataMemberMode.Assign)]
    public int Property1 { get; }

    [DataMember(DataMemberMode.Assign)]
    public int Property2 { get; private set; }
    
    [DataMember(DataMemberMode.Assign)]
    public int Property3 { get; protected set; }
    
    [DataMember(DataMemberMode.Assign)]
    public int Property4 { get; private protected set; }
}
</target>
</trans-unit>
<trans-unit id="tu8" xml:space="preserve">
<source xml:lang="en">Example: Special Case <g id="1">internal</g></source>
<target xml:lang="pt">Example: Special Case <g id="1">internal</g></target>
</trans-unit>
<trans-unit id="tu9" xml:space="preserve">
<source xml:lang="en"><x id="1"/>!IMPORTANT<x id="2"/>
To explicitly set the <g id="3">DataMemberMode.Assign</g> the @Stride.Core.DataMemberAttribute has to be applied.
Internal visibility counts then as visible for the serializers and becomes valid.</source>
<target xml:lang="pt"><x id="1"/>!IMPORTANT<x id="2"/>
To explicitly set the <g id="3">DataMemberMode.Assign</g> the @Stride.Core.DataMemberAttribute has to be applied.
Internal visibility counts then as visible for the serializers and becomes valid.</target>
</trans-unit>
<trans-unit id="tu10" xml:space="preserve">
<source xml:lang="en">using Stride.Core;

public class STRDIAG006
{
    // non existent setters count as non visible
    [DataMember(DataMemberMode.Assign)]
    public int Property1 { get; internal set; }

    [DataMember(DataMemberMode.Assign)]
    public int Property2 { get; internal protected set; }
}
</source>
<target xml:lang="pt">using Stride.Core;

public class STRDIAG006
{
    // non existent setters count as non visible
    [DataMember(DataMemberMode.Assign)]
    public int Property1 { get; internal set; }

    [DataMember(DataMemberMode.Assign)]
    public int Property2 { get; internal protected set; }
}
</target>
</trans-unit>
<trans-unit id="tu11" xml:space="preserve">
<source xml:lang="en">Solution</source>
<target xml:lang="pt">Solution</target>
</trans-unit>
<trans-unit id="tu12" xml:space="preserve">
<source xml:lang="en">To resolve the warning, increase the accessibility of the properties set to <g id="1">public</g>/<g id="2">internal</g>. Or remove the explicit <g id="3">DataMemberMode.Assign</g>, this can result in the <g id="4">DataMemberMode.Content</g>, if the property is a non valuetype/string type.</source>
<target xml:lang="pt">To resolve the warning, increase the accessibility of the properties set to <g id="1">public</g>/<g id="2">internal</g>. Or remove the explicit <g id="3">DataMemberMode.Assign</g>, this can result in the <g id="4">DataMemberMode.Content</g>, if the property is a non valuetype/string type.</target>
</trans-unit>
<trans-unit id="tu13" xml:space="preserve">
<source xml:lang="en">References</source>
<target xml:lang="pt">References</target>
</trans-unit>
<trans-unit id="tu14" xml:space="preserve">
<source xml:lang="en"><g id="1">Serialisation</g></source>
<target xml:lang="pt"><g id="1">Serialisation</g></target>
</trans-unit>
</body>
</file>
</xliff>