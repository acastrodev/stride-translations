<?xml version="1.0" encoding="UTF-8" standalone="no"?><xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:its="http://www.w3.org/2005/11/its" xmlns:itsxlf="http://www.w3.org/ns/its-xliff/" xmlns:okp="okapi-framework:xliff-extensions" its:version="2.0" version="1.2">
<file datatype="x-text/x-markdown" okp:inputEncoding="UTF-8" original="/D:/repos/rr/source/manual/sprites/use-sprites.md" source-language="en" target-language="pt">
<body>
<trans-unit id="tu1" xml:space="preserve">
<source xml:lang="en">Use sprites</source>
<target xml:lang="pt">Use sprites</target>
</trans-unit>
<trans-unit id="tu2" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Intermediate<x id="2"/>
<x id="3"/>Programmer<x id="4"/></source>
<target xml:lang="pt">&lt;x1\/&gt; Intermediário &lt;x2\/&gt;
&lt;x3\/&gt; Programador &lt;x4\/&gt;</target>
</trans-unit>
<trans-unit id="tu3" xml:space="preserve">
<source xml:lang="en">To add a sprite to a scene, add a <g id="1">sprite component</g> to an entity. Afterwards, you can control the sprite with a script.</source>
<target xml:lang="pt">Para adicionar um sprite a uma cena, adicione um componente <g id="1">sprite</g> a uma entidade. Depois, você pode controlar o sprite com um script.</target>
</trans-unit>
<trans-unit id="tu4" xml:space="preserve">
<source xml:lang="en">Add a sprite component</source>
<target xml:lang="pt">Adicionar um componente sprite</target>
</trans-unit>
<trans-unit id="tu5" xml:space="preserve">
<source xml:lang="en">In the <g id="1">Scene Editor</g>, select the entity you want to add a sprite to.</source>
<target xml:lang="pt">No <g id="1">Scene Editor</g>, selecione a entidade a que deseja adicionar um sprite.</target>
</trans-unit>
<trans-unit id="tu6" xml:space="preserve">
<source xml:lang="en"><x id="1"/>!Tip<x id="2"/>
To create an entity, right-click the scene or Entity Tree and select <g id="3">Empty entity</g>.</source>
<target xml:lang="pt">&lt;x1\/&gt;!Tip&lt;x2\/&gt;
Para criar uma entidade, clique com o botão direito do mouse na cena ou Entity Tree e selecione <g id="3">Empty entity</g>.</target>
</trans-unit>
<trans-unit id="tu7" xml:space="preserve">
<source xml:lang="en">In the <g id="1">Property Grid</g>, click <g id="2">Add component</g> and select <g id="3">Sprite</g>.</source>
<target xml:lang="pt">No <g id="1">Property Grid</g>, clique em <g id="2">Add component</g> e selecione <g id="3">Sprite</g>.</target>
</trans-unit>
<trans-unit id="tu8" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Sprite sheet<x id="2"/></source>
<target xml:lang="pt">&lt;x1\/&gt; Folha de preços &lt;x2\/&gt;</target>
</trans-unit>
<trans-unit id="tu9" xml:space="preserve">
<source xml:lang="en">Game Studio adds a Sprite component to the entity.</source>
<target xml:lang="pt">Game Studio adiciona um componente Sprite à entidade.</target>
</trans-unit>
<trans-unit id="tu10" xml:space="preserve">
<source xml:lang="en">From the <g id="1">Asset View</g>, drag the sprite sheet to the <g id="2">Source</g> field in the Sprite component:</source>
<target xml:lang="pt">Do <g id="1">Asset View</g>, arraste a folha de sprite para o campo <g id="2">Fonte</g> no componente Sprite:</target>
</trans-unit>
<group id="sd1_ssf5" resname="sub-filter:sd1">
<trans-unit id="sd1_sf5_tu1" resname="sd1_1" restype="x-paragraph" xml:space="preserve">
<source xml:lang="en">
        </source>
<target xml:lang="pt">
        </target>
</trans-unit>
</group>
<trans-unit id="tu11" xml:space="preserve">
<source xml:lang="en">Alternatively, click <x id="1"/>Hand icon<x id="2"/> (<g id="3">Select an asset</g>):</source>
<target xml:lang="pt">Alternativamente, clique em &lt;x1\/&gt;Hand icon&lt;x2\/&gt; (<g id="3">Select an asset</g>):</target>
</trans-unit>
<trans-unit id="tu12" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Pick asset up<x id="2"/></source>
<target xml:lang="pt">&lt;x1\/&gt;Ativação rápida até&lt;x2\/&gt;</target>
</trans-unit>
<trans-unit id="tu13" xml:space="preserve">
<source xml:lang="en">Then choose a sprite sheet:</source>
<target xml:lang="pt">Em seguida, escolha uma folha de sprite:</target>
</trans-unit>
<trans-unit id="tu14" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Select an asset<x id="2"/></source>
<target xml:lang="pt">&lt;x1\/&gt; Selecione um ativo&lt;x2\/&gt;</target>
</trans-unit>
<trans-unit id="tu15" xml:space="preserve">
<source xml:lang="en">Game Studio adds the sprite to the entity.</source>
<target xml:lang="pt">Game Studio adiciona o sprite à entidade.</target>
</trans-unit>
<trans-unit id="tu16" xml:space="preserve">
<source xml:lang="en">Sprite component properties</source>
<target xml:lang="pt">Propriedades do componente Sprite</target>
</trans-unit>
<trans-unit id="tu17" xml:space="preserve">
<source xml:lang="en">You can access the sprite component properties in the <g id="1">Property Grid</g>.</source>
<target xml:lang="pt">Você pode acessar as propriedades do componente sprite no <g id="1">Property Grid</g>.</target>
</trans-unit>
<trans-unit id="tu18" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Sprite component properties<x id="2"/></source>
<target xml:lang="pt">&lt;x1\/&gt; Propriedades do componente privado&lt;x2\/&gt;</target>
</trans-unit>
<trans-unit id="tu19" xml:space="preserve">
<source xml:lang="en">Property</source>
<target xml:lang="pt">Propriedade</target>
</trans-unit>
<trans-unit id="tu20" xml:space="preserve">
<source xml:lang="en">Function</source>
<target xml:lang="pt">Função</target>
</trans-unit>
<trans-unit id="tu21" xml:space="preserve">
<source xml:lang="en">Source</source>
<target xml:lang="pt">Fonte</target>
</trans-unit>
<trans-unit id="tu22" xml:space="preserve">
<source xml:lang="en">The source image file for the sprite</source>
<target xml:lang="pt">O arquivo de imagem de origem para o sprite</target>
</trans-unit>
<trans-unit id="tu23" xml:space="preserve">
<source xml:lang="en">Type</source>
<target xml:lang="pt">Tipo</target>
</trans-unit>
<trans-unit id="tu24" xml:space="preserve">
<source xml:lang="en"><g id="1">Sprites</g> have 3D space in the scene. <x id="2"/></source>
<target xml:lang="pt"><g id="1">Sprites</g> have 3D space in the scene. &lt;x1\/&gt;</target>
</trans-unit>
<trans-unit id="sd1_sf7_tu1" resname="sd1_1" restype="x-paragraph" xml:space="preserve">
<source xml:lang="en"/>
<target xml:lang="pt"/>
</trans-unit>
<trans-unit id="tu25" xml:space="preserve">
<source xml:lang="en"><g id="1">Billboards</g> always face the camera and appear fixed in 3D space.</source>
<target xml:lang="pt"><g id="1">Billboards</g> sempre enfrentam a câmera e aparecem fixos no espaço 3D.</target>
</trans-unit>
<trans-unit id="tu26" xml:space="preserve">
<source xml:lang="en">Color</source>
<target xml:lang="pt">Cor</target>
</trans-unit>
<trans-unit id="tu27" xml:space="preserve">
<source xml:lang="en">Applies a color to the sprite</source>
<target xml:lang="pt">Aplica uma cor ao sprite</target>
</trans-unit>
<trans-unit id="tu28" xml:space="preserve">
<source xml:lang="en">Intensity</source>
<target xml:lang="pt">Intensidade</target>
</trans-unit>
<trans-unit id="tu29" xml:space="preserve">
<source xml:lang="en">The intensity by which the color is scaled (mainly used for rendering LDR sprites in HDR scenes)</source>
<target xml:lang="pt">A intensidade pela qual a cor é dimensionada (principalmente usada para renderizar sprites LDR em cenas HDR)</target>
</trans-unit>
<trans-unit id="tu30" xml:space="preserve">
<source xml:lang="en">Premultiply alpha</source>
<target xml:lang="pt">Premultiplicação alfa</target>
</trans-unit>
<trans-unit id="tu31" xml:space="preserve">
<source xml:lang="en">Premultiply color components by their alpha component</source>
<target xml:lang="pt">Premultiplicar componentes de cor por seu componente alfa</target>
</trans-unit>
<trans-unit id="tu32" xml:space="preserve">
<source xml:lang="en">Ignore depth</source>
<target xml:lang="pt">Ignorar profundidade</target>
</trans-unit>
<trans-unit id="tu33" xml:space="preserve">
<source xml:lang="en">Ignore the depth of other elements in the scene when rendering the sprite. This always places the sprite on top of previous elements.</source>
<target xml:lang="pt">Ignore a profundidade de outros elementos na cena ao renderizar o sprite. Isso sempre coloca o sprite em cima de elementos anteriores.</target>
</trans-unit>
<trans-unit id="tu34" xml:space="preserve">
<source xml:lang="en">Alpha cutoff</source>
<target xml:lang="pt">Corte alfa</target>
</trans-unit>
<trans-unit id="tu35" xml:space="preserve">
<source xml:lang="en">Ignore pixels with low alpha values when rendering the sprite</source>
<target xml:lang="pt">Ignorar pixels com valores alfa baixos ao renderizar o sprite</target>
</trans-unit>
<trans-unit id="tu36" xml:space="preserve">
<source xml:lang="en">Sampler</source>
<target xml:lang="pt">Sampler</target>
</trans-unit>
<trans-unit id="tu37" xml:space="preserve">
<source xml:lang="en">The texture sampling method used for the sprite: Point (nearest), Linear, or Anisotropic</source>
<target xml:lang="pt">O método de amostragem de textura utilizado para o sprite: Ponto (mais próximo), Linear ou Anisotrópico</target>
</trans-unit>
<trans-unit id="tu38" xml:space="preserve">
<source xml:lang="en">Swizzle</source>
<target xml:lang="pt">Swizzle</target>
</trans-unit>
<trans-unit id="tu39" xml:space="preserve">
<source xml:lang="en">How the color channels are accessed. <x id="1"/></source>
<target xml:lang="pt">Como os canais de cores são acessados. &lt;x1\/&gt;</target>
</trans-unit>
<trans-unit id="sd1_sf9_tu1" resname="sd1_1" restype="x-paragraph" xml:space="preserve">
<source xml:lang="en"/>
<target xml:lang="pt"/>
</trans-unit>
<trans-unit id="tu40" xml:space="preserve">
<source xml:lang="en"><g id="1">Default</g> leaves the image unchanged (finalRGB = originalRGB) <x id="2"/></source>
<target xml:lang="pt"><g id="1"> Padrão</g> deixa a imagem inalterada (finalRGB = originalRGB) &lt;x1\/&gt;</target>
</trans-unit>
<trans-unit id="sd1_sf11_tu1" resname="sd1_1" restype="x-paragraph" xml:space="preserve">
<source xml:lang="en"/>
<target xml:lang="pt"/>
</trans-unit>
<trans-unit id="tu41" xml:space="preserve">
<source xml:lang="en"><g id="1">Normal map</g> uses the color channels as a <g id="2">normal map</g> <x id="3"/></source>
<target xml:lang="pt"><g id="1">Normal map</g> usa os canais de cor como um mapa <g id="2">normal</g> &lt;x1\/&gt;</target>
</trans-unit>
<trans-unit id="sd1_sf13_tu1" resname="sd1_1" restype="x-paragraph" xml:space="preserve">
<source xml:lang="en"/>
<target xml:lang="pt"/>
</trans-unit>
<trans-unit id="tu42" xml:space="preserve">
<source xml:lang="en"><g id="1">Grayscale (alpha)</g> uses only the R channel (finalRGBA = originalRRRR), so the sprite is red <x id="2"/></source>
<target xml:lang="pt"><g id="1">Grayscale (alpha)</g> usa apenas o canal R (finalRGBA = originalRRRR), então o sprite é vermelho &lt;x1\/&gt;</target>
</trans-unit>
<trans-unit id="sd1_sf15_tu1" resname="sd1_1" restype="x-paragraph" xml:space="preserve">
<source xml:lang="en"/>
<target xml:lang="pt"/>
</trans-unit>
<trans-unit id="tu43" xml:space="preserve">
<source xml:lang="en"><g id="1">Grayscale (opaque)</g> is the same as <g id="2">Grayscale (alpha)</g>, but uses a value of <g id="3">1</g> for the alpha channel, so the sprite is opaque</source>
<target xml:lang="pt"><g id="1">Grayscale (opaque)</g> é o mesmo que <g id="2">Grayscale (alpha)</g>, mas usa um valor de <g id="3">1</g> para o canal alfa, de modo que o sprite é opaco</target>
</trans-unit>
<trans-unit id="tu44" xml:space="preserve">
<source xml:lang="en">Render group</source>
<target xml:lang="pt">Grupo de renderização</target>
</trans-unit>
<trans-unit id="tu45" xml:space="preserve">
<source xml:lang="en">Which render group the sprite belongs to. Cameras can render different groups. For more information, see <g id="1">Render groups and render masks</g>.</source>
<target xml:lang="pt">A qual faz o grupo ao qual pertence o sprite. As câmeras podem renderizar diferentes grupos. Para mais informações, consulte grupos <g id="1">Render e torne máscaras</g>.</target>
</trans-unit>
<trans-unit id="tu46" xml:space="preserve">
<source xml:lang="en">Use sprites in a script</source>
<target xml:lang="pt">Use sprites em um script</target>
</trans-unit>
<trans-unit id="tu47" xml:space="preserve">
<source xml:lang="en">You can use scripts to render sprites at runtime. To do this, attach the script to an entity with a sprite component.</source>
<target xml:lang="pt">Você pode usar scripts para renderizar sprites em tempo de execução. Para fazer isso, anexar o script a uma entidade com um componente sprite.</target>
</trans-unit>
<trans-unit id="tu48" xml:space="preserve">
<source xml:lang="en">For information about how to add scripts to entities, see <g id="1">Use a script</g>.</source>
<target xml:lang="pt">Para obter informações sobre como adicionar scripts a entidades, consulte <g id="1">Use um script</g>.</target>
</trans-unit>
<trans-unit id="tu49" xml:space="preserve">
<source xml:lang="en">Code sample</source>
<target xml:lang="pt">Amostra de código</target>
</trans-unit>
<trans-unit id="tu50" xml:space="preserve">
<source xml:lang="en">This script displays a sprite that advances to the next sprite in the index every second. After it reaches the end of the sprite index, it loops.</source>
<target xml:lang="pt">Este script exibe um sprite que avança para o próximo sprite no índice a cada segundo. Depois de atingir o fim do índice de sprite, ele loops.</target>
</trans-unit>
<trans-unit id="tu51" xml:space="preserve">
<source xml:lang="en">using Stride.Rendering.Sprites;

public class Animation : SyncScript
{
   // Declared public member fields and properties are displayed in Game Studio.
   private SpriteFromSheet sprite;
   private DateTime lastFrame;

   public override void Start()
   {
       // Initialize the script.
       sprite = Entity.Get&lt;SpriteComponent&gt;().SpriteProvider as SpriteFromSheet;
       lastFrame = DateTime.Now;
   }

   public override void Update()
   {
      // Do something every new frame.
      if ((DateTime.Now - lastFrame) &gt; new TimeSpan(0, 0, 1))
      {
         sprite.CurrentFrame += 1;
         lastFrame = DateTime.Now;
      }
   }
}
</source>
<target xml:lang="pt">usando Stride. Renderização. Sprites;

animação: Sincronização
(
   \/\/ Campos e propriedades de membros públicos declarados são exibidos no Game Studio.
   sprite privado FromSheet sprite;
   dataTime último privado Quadro;

   anula de sobreposição pública Start()
   (
       \/\/ Inicializar o script.
       sprite = Entity.Get&lt;SpriteComponent&gt;(). SpriteProvider como SpriteFromSheet;
       último Quadro = DateTime.Now;
   }

   atualização()
   (
      \/\/ Faça algo em cada novo quadro.
      se (DateTime. Agora - lastFrame) &gt; novo TimeSpan(0, 0, 1))
      (
         sprite. CurrentFrame += 1;
         último Quadro = DateTime.Now;
      }
   }
}
</target>
</trans-unit>
<trans-unit id="tu52" xml:space="preserve">
<source xml:lang="en">See also</source>
<target xml:lang="pt">Ver também</target>
</trans-unit>
<trans-unit id="tu53" xml:space="preserve">
<source xml:lang="en"><g id="1">Import sprite sheets</g></source>
<target xml:lang="pt"><g id="1">Folhas de sprite de importação</g></target>
</trans-unit>
<trans-unit id="tu54" xml:space="preserve">
<source xml:lang="en"><g id="1">Edit sprites</g></source>
<target xml:lang="pt"><g id="1">Editar sprites</g></target>
</trans-unit>
</body>
</file>
</xliff>