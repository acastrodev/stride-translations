<?xml version="1.0" encoding="UTF-8" standalone="no"?><xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:its="http://www.w3.org/2005/11/its" xmlns:itsxlf="http://www.w3.org/ns/its-xliff/" xmlns:okp="okapi-framework:xliff-extensions" its:version="2.0" version="1.2">
<file datatype="x-text/x-markdown" okp:inputEncoding="UTF-8" original="/D:/repos/rr/source/tutorials/csharpbeginner/loading-content.md" source-language="en" target-language="pt">
<body>
<trans-unit id="tu1" xml:space="preserve">
<source xml:lang="en">Loading content</source>
<target xml:lang="pt">Loading content</target>
</trans-unit>
<trans-unit id="tu2" xml:space="preserve">
<source xml:lang="en">You can find this sample in the tutorial project: <g id="1">Menu</g> &amp;rarr; <g id="2">Loading content from code</g></source>
<target xml:lang="pt">You can find this sample in the tutorial project: <g id="1">Menu</g> &amp;rarr; <g id="2">Loading content from code</g></target>
</trans-unit>
<trans-unit id="tu3" xml:space="preserve">
<source xml:lang="en">Explanation</source>
<target xml:lang="pt">Explanation</target>
</trans-unit>
<trans-unit id="tu4" xml:space="preserve">
<source xml:lang="en">This C# Beginner tutorial covers how to load content from code.</source>
<target xml:lang="pt">This C# Beginner tutorial covers how to load content from code.</target>
</trans-unit>
<trans-unit id="tu5" xml:space="preserve">
<source xml:lang="en">Assets like models, textures, sound etc can be loaded from during runtime. At that point we no longer speak of assets but of 'content'.</source>
<target xml:lang="pt">Assets like models, textures, sound etc can be loaded from during runtime. At that point we no longer speak of assets but of 'content'.</target>
</trans-unit>
<trans-unit id="tu6" xml:space="preserve">
<source xml:lang="en">This tutorial specifically loads content of the <g id="1">Model</g> type. Loaded content that is no longer required in your scene, should be unloaded again so save up memory. For more information on assets see <g id="2">Manage assets</g>.</source>
<target xml:lang="pt">This tutorial specifically loads content of the <g id="1">Model</g> type. Loaded content that is no longer required in your scene, should be unloaded again so save up memory. For more information on assets see <g id="2">Manage assets</g>.</target>
</trans-unit>
<trans-unit id="tu7" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Loading content<x id="2"/></source>
<target xml:lang="pt"><x id="1"/>Loading content<x id="2"/></target>
</trans-unit>
<trans-unit id="tu8" xml:space="preserve">
<source xml:lang="en"><x id="1"/>!Video https://www.youtube.com/embed/_c4Cv4k3YyI<x id="2"/></source>
<target xml:lang="pt"><x id="1"/>!Video https://www.youtube.com/embed/_c4Cv4k3YyI<x id="2"/></target>
</trans-unit>
<trans-unit id="tu9" xml:space="preserve">
<source xml:lang="en">Code</source>
<target xml:lang="pt">Code</target>
</trans-unit>
<trans-unit id="tu10" xml:space="preserve">
<source xml:lang="en">With the <g id="1">L</g> and <g id="2">U</g> key you can either Load or Unload the model of a mannequin. If there is a model loaded, you can use the <g id="3">S</g> key to spawn a new entity with the loaded mannequin model.</source>
<target xml:lang="pt">With the <g id="1">L</g> and <g id="2">U</g> key you can either Load or Unload the model of a mannequin. If there is a model loaded, you can use the <g id="3">S</g> key to spawn a new entity with the loaded mannequin model.</target>
</trans-unit>
<trans-unit id="tu11" xml:space="preserve">
<source xml:lang="en">The <g id="1">C</g> clears all of the spawned entities in the scene. This demo demonstrates that when models are unloaded, any entities that reference the model are still existing in the scene.</source>
<target xml:lang="pt">The <g id="1">C</g> clears all of the spawned entities in the scene. This demo demonstrates that when models are unloaded, any entities that reference the model are still existing in the scene.</target>
</trans-unit>
<trans-unit id="tu12" xml:space="preserve">
<source xml:lang="en">[!code-csharp<g id="1">Loading content</g>]</source>
<target xml:lang="pt">[!code-csharp<g id="1">Loading content</g>]</target>
</trans-unit>
</body>
</file>
</xliff>