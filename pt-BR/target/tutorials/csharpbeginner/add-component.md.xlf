<?xml version="1.0" encoding="UTF-8" standalone="no"?><xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:its="http://www.w3.org/2005/11/its" xmlns:itsxlf="http://www.w3.org/ns/its-xliff/" xmlns:okp="okapi-framework:xliff-extensions" its:version="2.0" version="1.2">
<file datatype="x-text/x-markdown" okp:inputEncoding="UTF-8" original="/D:/repos/rr/source/tutorials/csharpbeginner/add-component.md" source-language="en" target-language="pt">
<body>
<trans-unit id="tu1" xml:space="preserve">
<source xml:lang="en">Adding a component</source>
<target xml:lang="pt">Adding a component</target>
</trans-unit>
<trans-unit id="tu2" xml:space="preserve">
<source xml:lang="en">You can find this sample in the tutorial project: <g id="1">Menu</g> &amp;rarr; <g id="2">Adding a component</g></source>
<target xml:lang="pt">You can find this sample in the tutorial project: <g id="1">Menu</g> &amp;rarr; <g id="2">Adding a component</g></target>
</trans-unit>
<trans-unit id="tu3" xml:space="preserve">
<source xml:lang="en">Explanation</source>
<target xml:lang="pt">Explanation</target>
</trans-unit>
<trans-unit id="tu4" xml:space="preserve">
<source xml:lang="en">This C# Beginner tutorial covers how to add and remove components.</source>
<target xml:lang="pt">This C# Beginner tutorial covers how to add and remove components.</target>
</trans-unit>
<trans-unit id="tu5" xml:space="preserve">
<source xml:lang="en">In the previous tutorial we learned how we can retrieve components that are already attached to an entity through the editor. This tutorial shows that we can accomplish the same thing by code.</source>
<target xml:lang="pt">In the previous tutorial we learned how we can retrieve components that are already attached to an entity through the editor. This tutorial shows that we can accomplish the same thing by code.</target>
</trans-unit>
<trans-unit id="tu6" xml:space="preserve">
<source xml:lang="en">We can add the same component several times to the same entity. We also learn how to remove all of components of the same type again.</source>
<target xml:lang="pt">We can add the same component several times to the same entity. We also learn how to remove all of components of the same type again.</target>
</trans-unit>
<trans-unit id="tu7" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Add a component<x id="2"/></source>
<target xml:lang="pt"><x id="1"/>Add a component<x id="2"/></target>
</trans-unit>
<trans-unit id="tu8" xml:space="preserve">
<source xml:lang="en"><x id="1"/>!Video https://www.youtube.com/embed/KGuBSRyRmVo<x id="2"/></source>
<target xml:lang="pt"><x id="1"/>!Video https://www.youtube.com/embed/KGuBSRyRmVo<x id="2"/></target>
</trans-unit>
<trans-unit id="tu9" xml:space="preserve">
<source xml:lang="en">Code</source>
<target xml:lang="pt">Code</target>
</trans-unit>
<trans-unit id="tu10" xml:space="preserve">
<source xml:lang="en">AmmoComponent</source>
<target xml:lang="pt">AmmoComponent</target>
</trans-unit>
<trans-unit id="tu11" xml:space="preserve">
<source xml:lang="en">This is the AmmoComponent. We will not attach it to the entity in the editor. Instead we will add it ourselves in the AddingAComponent script.</source>
<target xml:lang="pt">This is the AmmoComponent. We will not attach it to the entity in the editor. Instead we will add it ourselves in the AddingAComponent script.</target>
</trans-unit>
<trans-unit id="tu12" xml:space="preserve">
<source xml:lang="en">[!code-csharp<g id="1">AmmoComponent</g>]</source>
<target xml:lang="pt">[!code-csharp<g id="1">AmmoComponent</g>]</target>
</trans-unit>
<trans-unit id="tu13" xml:space="preserve">
<source xml:lang="en">Adding A Component</source>
<target xml:lang="pt">Adding A Component</target>
</trans-unit>
<trans-unit id="tu14" xml:space="preserve">
<source xml:lang="en">This component script, will add the AmmoComponent script to the entity. We then add another component (of the same type) before we remove all components of that type.</source>
<target xml:lang="pt">This component script, will add the AmmoComponent script to the entity. We then add another component (of the same type) before we remove all components of that type.</target>
</trans-unit>
<trans-unit id="tu15" xml:space="preserve">
<source xml:lang="en">Finally we learn how to automatically create a component, attach it to the entity and get a reference all in 1 line of code. This only works if the entity doesn't have any components of the given attached yet.</source>
<target xml:lang="pt">Finally we learn how to automatically create a component, attach it to the entity and get a reference all in 1 line of code. This only works if the entity doesn't have any components of the given attached yet.</target>
</trans-unit>
<trans-unit id="tu16" xml:space="preserve">
<source xml:lang="en">[!code-csharp<g id="1">AddingAComponent</g>]</source>
<target xml:lang="pt">[!code-csharp<g id="1">AddingAComponent</g>]</target>
</trans-unit>
</body>
</file>
</xliff>