<?xml version="1.0" encoding="UTF-8" standalone="no"?><xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:its="http://www.w3.org/2005/11/its" xmlns:itsxlf="http://www.w3.org/ns/its-xliff/" xmlns:okp="okapi-framework:xliff-extensions" its:version="2.0" version="1.2">
<file datatype="x-text/x-markdown" okp:inputEncoding="UTF-8" original="/D:/repos/rr/source/tutorials/csharpbeginner/get-component.md" source-language="en" target-language="pt">
<body>
<trans-unit id="tu1" xml:space="preserve">
<source xml:lang="en">Getting a component</source>
<target xml:lang="pt">Obtendo um componente</target>
</trans-unit>
<trans-unit id="tu2" xml:space="preserve">
<source xml:lang="en">You can find this sample in the tutorial project: <g id="1">Menu</g> &amp;rarr;  <g id="2">Getting a component</g></source>
<target xml:lang="pt">Você pode encontrar esta amostra no projeto tutorial: <g id="1">Menu</g> → <g id="2"> Obtendo um componente</g></target>
</trans-unit>
<trans-unit id="tu3" xml:space="preserve">
<source xml:lang="en">Explanation</source>
<target xml:lang="pt">Explicação</target>
</trans-unit>
<trans-unit id="tu4" xml:space="preserve">
<source xml:lang="en">This C# beginner tutorial covers how to get and remove components.</source>
<target xml:lang="pt">Este tutorial iniciante C# cobre como obter e remover componentes.</target>
</trans-unit>
<trans-unit id="tu5" xml:space="preserve">
<source xml:lang="en">Components are one of the most important concepts in Stride. Every entity in the scene has a list of components. The transform for instance is also a component.</source>
<target xml:lang="pt">Os componentes são um dos conceitos mais importantes em Stride. Cada entidade na cena tem uma lista de componentes. A transformação por exemplo também é um componente.</target>
</trans-unit>
<trans-unit id="tu6" xml:space="preserve">
<source xml:lang="en">When we make custom scripts that inherit from <g id="1">SyncScript</g> or <g id="2">AsyncScript</g>, they turn into Components that we can attach to entities. We can attach these components to entities by using the editor or we can attach them by code.</source>
<target xml:lang="pt">Quando fazemos scripts personalizados que herdam de <g id="1">SyncScript</g> ou <g id="2">AsyncScript</g>, eles se transformam em Componentes que podemos anexar a entidades. Podemos anexar esses componentes a entidades usando o editor ou podemos anexá-los por código.</target>
</trans-unit>
<trans-unit id="tu7" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Get a component<x id="2"/></source>
<target xml:lang="pt"><x id="1"/> Obter um componente<x id="2"/></target>
</trans-unit>
<trans-unit id="tu8" xml:space="preserve">
<source xml:lang="en"><x id="1"/>!Video https://www.youtube.com/embed/qRZG8qXkvDQ<x id="2"/></source>
<target xml:lang="pt"><x id="1"/>!Vídeo https://www.youtube.com/embed/qRZG8qXkvDQ<x id="2"/></target>
</trans-unit>
<trans-unit id="tu9" xml:space="preserve">
<source xml:lang="en">Code</source>
<target xml:lang="pt">Código</target>
</trans-unit>
<trans-unit id="tu10" xml:space="preserve">
<source xml:lang="en">AmmoComponent</source>
<target xml:lang="pt">AmmoComponent</target>
</trans-unit>
<trans-unit id="tu11" xml:space="preserve">
<source xml:lang="en">This is the first component that we attach to an entity. In the second script, we will try to get this AmmoComponent.</source>
<target xml:lang="pt">Este é o primeiro componente que anexamos a uma entidade. No segundo script, vamos tentar obter este AmmoComponent.</target>
</trans-unit>
<trans-unit id="tu12" xml:space="preserve">
<source xml:lang="en">[!code-csharp<g id="1">AmmoComponent</g>]</source>
<target xml:lang="pt">[!code-csharp<g id="1">AmmoComponent</g>]</target>
</trans-unit>
<trans-unit id="tu13" xml:space="preserve">
<source xml:lang="en">Getting A Component</source>
<target xml:lang="pt">Obtendo um componente</target>
</trans-unit>
<trans-unit id="tu14" xml:space="preserve">
<source xml:lang="en">This component script, will retrieve the AmmoComponent script above and use its public method.</source>
<target xml:lang="pt">Este script componente, irá recuperar o script AmmoComponent acima e usar seu método público.</target>
</trans-unit>
<trans-unit id="tu15" xml:space="preserve">
<source xml:lang="en">[!code-csharp<g id="1">GettingAComponent</g>]</source>
<target xml:lang="pt">[!code-csharp<g id="1">GettingAComponent</g>]</target>
</trans-unit>
</body>
</file>
</xliff>