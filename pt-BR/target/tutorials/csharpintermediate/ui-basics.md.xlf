<?xml version="1.0" encoding="UTF-8" standalone="no"?><xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:its="http://www.w3.org/2005/11/its" xmlns:itsxlf="http://www.w3.org/ns/its-xliff/" xmlns:okp="okapi-framework:xliff-extensions" its:version="2.0" version="1.2">
<file datatype="x-text/x-markdown" okp:inputEncoding="UTF-8" original="/D:/repos/rr/source/tutorials/csharpintermediate/ui-basics.md" source-language="en" target-language="pt">
<body>
<trans-unit id="tu1" xml:space="preserve">
<source xml:lang="en">UI Basics</source>
<target xml:lang="pt">UI Basics</target>
</trans-unit>
<trans-unit id="tu2" xml:space="preserve">
<source xml:lang="en">This first C# intermediate tutorial covers the basics of creating UI with Stride.</source>
<target xml:lang="pt">Este é o primeiro O tutorial intermediário C# cobre os conceitos básicos de criação de interface do usuário com Stride.</target>
</trans-unit>
<trans-unit id="tu3" xml:space="preserve">
<source xml:lang="en">Explanation</source>
<target xml:lang="pt">Explicação</target>
</trans-unit>
<trans-unit id="tu4" xml:space="preserve">
<source xml:lang="en">We will learn about the UI editor, accessing UI page elements and even how to setup UI entirely by code. The Stride editor comes with a UI editor which we can utilize to create UI pages. We can then add UI elements to these pages, like buttons and textfields.</source>
<target xml:lang="pt">Vamos aprender sobre o editor de interface do usuário, acessando elementos de página de interface do usuário e até como configurar a interface do usuário inteiramente por código. O editor Stride vem com um editor de interface do usuário que podemos utilizar para criar páginas de interface do usuário. Podemos então adicionar elementos de interface do usuário a essas páginas, como botões e campos de texto.</target>
</trans-unit>
<trans-unit id="tu5" xml:space="preserve">
<source xml:lang="en">Those UI elements can be referenced in code, so that can set up events like <g id="1">button-clicked</g> or <g id="2">text-changed</g>.</source>
<target xml:lang="pt">Esses elementos de IU podem ser referenciados em código, para que possam configurar eventos como <g id="1">button-clicked</g> ou <g id="2">text-changed</g>.</target>
</trans-unit>
<trans-unit id="tu6" xml:space="preserve">
<source xml:lang="en"><x id="1"/>!Video https://www.youtube.com/embed/rB5duwfs1mU<x id="2"/></source>
<target xml:lang="pt"><x id="1"/>!Vídeo https://www.youtube.com/embed/rB5duwfs1mU<x id="2"/></target>
</trans-unit>
<trans-unit id="tu7" xml:space="preserve">
<source xml:lang="en"><x id="1"/>!Video https://www.youtube.com/embed/NnnbHn9LQUU<x id="2"/></source>
<target xml:lang="pt"><x id="1"/>!Vídeo https://www.youtube.com/embed/NnnbHn9LQU<x id="2"/></target>
</trans-unit>
<trans-unit id="tu8" xml:space="preserve">
<source xml:lang="en">Stride editor UI pages</source>
<target xml:lang="pt">Stride editor UI páginas</target>
</trans-unit>
<trans-unit id="tu9" xml:space="preserve">
<source xml:lang="en">The code below will look for a Page component that has been added to the current entity. On that page we search for UI elements like buttons and textfields. We than tell those UI elements what happens when we click on them, or that something needs to be done when a text value changes.
[!code-csharp<g id="1">editorpages</g>]</source>
<target xml:lang="pt">O código abaixo procurará um componente Page que foi adicionado à entidade atual. Nessa página buscamos elementos de interface do usuário como botões e campos de texto. Nós do que dizer a esses elementos de interface do usuário o que acontece quando clicamos neles, ou que algo precisa ser feito quando um valor de texto muda.
[!code-csharp<g id="1">editorpages</g>]</target>
</trans-unit>
<trans-unit id="tu10" xml:space="preserve">
<source xml:lang="en">UI pages made entirely by code</source>
<target xml:lang="pt">Páginas UI feitas inteiramente por código</target>
</trans-unit>
<trans-unit id="tu11" xml:space="preserve">
<source xml:lang="en">This script will create everything from scratch: a UI page, a stackpanel, a button, a textfield and the interactive logic behind it.
[!code-csharp<g id="1">uibycode</g>]</source>
<target xml:lang="pt">Este script irá criar tudo a partir do zero: uma página UI, um stackpanel, um botão, um campo de texto e a lógica interativa por trás dele.
[!code-csharp<g id="1">uibycode</g>]</target>
</trans-unit>
</body>
</file>
</xliff>