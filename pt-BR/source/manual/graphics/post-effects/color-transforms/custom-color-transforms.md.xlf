<?xml version="1.0" encoding="UTF-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:okp="okapi-framework:xliff-extensions" xmlns:its="http://www.w3.org/2005/11/its" xmlns:itsxlf="http://www.w3.org/ns/its-xliff/" its:version="2.0">
<file original="/D:/repos/rr/source/manual/graphics/post-effects/color-transforms/custom-color-transforms.md" source-language="en" target-language="pt" datatype="x-text/x-markdown" okp:inputEncoding="UTF-8">
<body>
<trans-unit id="tu1" xml:space="preserve">
<source xml:lang="en">Custom color transforms</source>
<target xml:lang="pt">Custom color transforms</target>
</trans-unit>
<trans-unit id="tu2" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Advanced<x id="2"/>
<x id="3"/>Programmer<x id="4"/></source>
<target xml:lang="pt"><x id="1"/>Advanced<x id="2"/>
<x id="3"/>Programmer<x id="4"/></target>
</trans-unit>
<trans-unit id="tu3" xml:space="preserve">
<source xml:lang="en">You can write your own <g id="1">custom color transform</g> effects. For example, you can create:</source>
<target xml:lang="pt">You can write your own <g id="1">custom color transform</g> effects. For example, you can create:</target>
</trans-unit>
<trans-unit id="tu4" xml:space="preserve">
<source xml:lang="en">water droplets on the camera</source>
<target xml:lang="pt">water droplets on the camera</target>
</trans-unit>
<trans-unit id="tu5" xml:space="preserve">
<source xml:lang="en">screen transitions (such as fade-ins and fade-outs)</source>
<target xml:lang="pt">screen transitions (such as fade-ins and fade-outs)</target>
</trans-unit>
<trans-unit id="tu6" xml:space="preserve">
<source xml:lang="en">effects simulating pain or intoxication (eg by applying tints or other effects)</source>
<target xml:lang="pt">effects simulating pain or intoxication (eg by applying tints or other effects)</target>
</trans-unit>
<trans-unit id="tu7" xml:space="preserve">
<source xml:lang="en">object outlines</source>
<target xml:lang="pt">object outlines</target>
</trans-unit>
<trans-unit id="tu8" xml:space="preserve">
<source xml:lang="en">To create a custom color transform, you need to write two files: an effect shader (containing the effect itself), and a C# class (to make the effect accessible in Game Studio).</source>
<target xml:lang="pt">To create a custom color transform, you need to write two files: an effect shader (containing the effect itself), and a C# class (to make the effect accessible in Game Studio).</target>
</trans-unit>
<trans-unit id="tu9" xml:space="preserve">
<source xml:lang="en">1. Create a shader</source>
<target xml:lang="pt">1. Create a shader</target>
</trans-unit>
<trans-unit id="tu10" xml:space="preserve">
<source xml:lang="en">Make sure you have the <g id="1">Stride Visual Studio extension</g> installed. This is necessary to convert the shader files from SDSL (<g id="2">Stride shading language</g>) to <g id="3">.cs</g> files.</source>
<target xml:lang="pt">Make sure you have the <g id="1">Stride Visual Studio extension</g> installed. This is necessary to convert the shader files from SDSL (<g id="2">Stride shading language</g>) to <g id="3">.cs</g> files.</target>
</trans-unit>
<trans-unit id="tu11" xml:space="preserve">
<source xml:lang="en">In Game Studio, in the toolbar, click <x id="1"/>Open in IDE<x id="2"/> (<g id="3">Open in IDE</g>) to open your project in Visual Studio.</source>
<target xml:lang="pt">In Game Studio, in the toolbar, click <x id="1"/>Open in IDE<x id="2"/> (<g id="3">Open in IDE</g>) to open your project in Visual Studio.</target>
</trans-unit>
<trans-unit id="tu12" xml:space="preserve">
<source xml:lang="en">In the Visual Studio <g id="1">Solution Explorer</g>, right-click the project (eg <g id="2">MyGame.Game</g>) and select <g id="3">New item</g>.</source>
<target xml:lang="pt">In the Visual Studio <g id="1">Solution Explorer</g>, right-click the project (eg <g id="2">MyGame.Game</g>) and select <g id="3">New item</g>.</target>
</trans-unit>
<trans-unit id="tu13" xml:space="preserve">
<source xml:lang="en"><x id="1"/>New item<x id="2"/></source>
<target xml:lang="pt"><x id="1"/>New item<x id="2"/></target>
</trans-unit>
<trans-unit id="tu14" xml:space="preserve">
<source xml:lang="en">Select <g id="1">Class</g>.</source>
<target xml:lang="pt">Select <g id="1">Class</g>.</target>
</trans-unit>
<trans-unit id="tu15" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Select class<x id="2"/></source>
<target xml:lang="pt"><x id="1"/>Select class<x id="2"/></target>
</trans-unit>
<trans-unit id="tu16" xml:space="preserve">
<source xml:lang="en">In the <g id="1">Name</g> field, specify a name with the extension <g id="2">.sdsl</g> (eg <g id="3">MyColorTransformShader.sdsl</g>), and click <g id="4">Add</g>.</source>
<target xml:lang="pt">In the <g id="1">Name</g> field, specify a name with the extension <g id="2">.sdsl</g> (eg <g id="3">MyColorTransformShader.sdsl</g>), and click <g id="4">Add</g>.</target>
</trans-unit>
<trans-unit id="tu17" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Create post effect<x id="2"/></source>
<target xml:lang="pt"><x id="1"/>Create post effect<x id="2"/></target>
</trans-unit>
<trans-unit id="tu18" xml:space="preserve">
<source xml:lang="en">The Stride Visual Studio extension automatically generates a <g id="1">.cs</g> file from the <g id="2">.sdsl</g> file. The Solution Explorer lists it as a child of the <g id="3">.sdsl</g> file.</source>
<target xml:lang="pt">The Stride Visual Studio extension automatically generates a <g id="1">.cs</g> file from the <g id="2">.sdsl</g> file. The Solution Explorer lists it as a child of the <g id="3">.sdsl</g> file.</target>
</trans-unit>
<trans-unit id="tu19" xml:space="preserve">
<source xml:lang="en"><x id="1"/>My post effect<x id="2"/></source>
<target xml:lang="pt"><x id="1"/>My post effect<x id="2"/></target>
</trans-unit>
<trans-unit id="tu20" xml:space="preserve">
<source xml:lang="en">Open the <g id="1">.sdsl</g> file, remove the existing lines, and write your shader.</source>
<target xml:lang="pt">Open the <g id="1">.sdsl</g> file, remove the existing lines, and write your shader.</target>
</trans-unit>
<trans-unit id="tu21" xml:space="preserve">
<source xml:lang="en">Shaders are written in Stride Shading Language (SDSL), which is based on HLSL. For more information, see <g id="1">Shading language</g>.</source>
<target xml:lang="pt">Shaders are written in Stride Shading Language (SDSL), which is based on HLSL. For more information, see <g id="1">Shading language</g>.</target>
</trans-unit>
<trans-unit id="tu22" xml:space="preserve">
<source xml:lang="en">For example, the shader below multiplies the image color by the <g id="1">MyColor</g> parameter:</source>
<target xml:lang="pt">For example, the shader below multiplies the image color by the <g id="1">MyColor</g> parameter:</target>
</trans-unit>
<trans-unit id="tu23" xml:space="preserve">
<source xml:lang="en">shader MyColorTransformShader : ColorTransformShader
{
    [Color]
    float4 MyColor;

    override float4 Compute(float4 color)
    {
        return color * MyColor;
    }
};
</source>
<target xml:lang="pt">shader MyColorTransformShader : ColorTransformShader
{
    [Color]
    float4 MyColor;

    override float4 Compute(float4 color)
    {
        return color * MyColor;
    }
};
</target>
</trans-unit>
<trans-unit id="tu24" xml:space="preserve">
<source xml:lang="en"><x id="1"/>!Note<x id="2"/>
Make sure the shader name in the file (eg <g id="3">MyColorTransformShader</g> in the code above) is the same as the filename (eg <g id="4">MyColorTransformShader.sdsl</g>).</source>
<target xml:lang="pt"><x id="1"/>!Note<x id="2"/>
Make sure the shader name in the file (eg <g id="3">MyColorTransformShader</g> in the code above) is the same as the filename (eg <g id="4">MyColorTransformShader.sdsl</g>).</target>
</trans-unit>
<trans-unit id="tu25" xml:space="preserve">
<source xml:lang="en">2. Create a C# class</source>
<target xml:lang="pt">2. Create a C# class</target>
</trans-unit>
<trans-unit id="tu26" xml:space="preserve">
<source xml:lang="en">In the Visual Studio <g id="1">Solution Explorer</g>, right-click the project (eg <g id="2">MyGame.Game</g>) and select <g id="3">Add > New item</g>.</source>
<target xml:lang="pt">In the Visual Studio <g id="1">Solution Explorer</g>, right-click the project (eg <g id="2">MyGame.Game</g>) and select <g id="3">Add > New item</g>.</target>
</trans-unit>
<trans-unit id="tu27" xml:space="preserve">
<source xml:lang="en"><x id="1"/>New item<x id="2"/></source>
<target xml:lang="pt"><x id="1"/>New item<x id="2"/></target>
</trans-unit>
<trans-unit id="tu28" xml:space="preserve">
<source xml:lang="en">Select <g id="1">Class</g>, specify a <g id="2">name</g> (eg <g id="3">MyColorTransform.cs</g>), and click <g id="4">Add</g>.</source>
<target xml:lang="pt">Select <g id="1">Class</g>, specify a <g id="2">name</g> (eg <g id="3">MyColorTransform.cs</g>), and click <g id="4">Add</g>.</target>
</trans-unit>
<trans-unit id="tu29" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Add script<x id="2"/></source>
<target xml:lang="pt"><x id="1"/>Add script<x id="2"/></target>
</trans-unit>
<trans-unit id="tu30" xml:space="preserve">
<source xml:lang="en">Open the file and write the class.</source>
<target xml:lang="pt">Open the file and write the class.</target>
</trans-unit>
<trans-unit id="tu31" xml:space="preserve">
<source xml:lang="en">For example, the code below creates the class <g id="1">MyColorTransform</g>, which uses the shader and supplies a value for the color <g id="2">MyColor</g> (defined in the shader).</source>
<target xml:lang="pt">For example, the code below creates the class <g id="1">MyColorTransform</g>, which uses the shader and supplies a value for the color <g id="2">MyColor</g> (defined in the shader).</target>
</trans-unit>
<trans-unit id="tu32" xml:space="preserve">
<source xml:lang="en">using Stride.Core;
using Stride.Core.Mathematics;
using Stride.Rendering;
using Stride.Rendering.Images;

namespace MyGame
{
    [DataContract("MyColorTransform")]
    public class MyColorTransform : ColorTransform
    {
        /// &lt;inheritdoc />
        public MyColorTransform() 
            : base("MyColorTransformShader")
        {
        }

        public Color4 MyColor { get; set; }

        public override void UpdateParameters(ColorTransformContext context)
        {
            Parameters.Set(MyColorTransformShaderKeys.MyColor, MyColor);

            // Copy parameters to parent
            base.UpdateParameters(context);
        }
    }
}
</source>
<target xml:lang="pt">using Stride.Core;
using Stride.Core.Mathematics;
using Stride.Rendering;
using Stride.Rendering.Images;

namespace MyGame
{
    [DataContract("MyColorTransform")]
    public class MyColorTransform : ColorTransform
    {
        /// &lt;inheritdoc />
        public MyColorTransform() 
            : base("MyColorTransformShader")
        {
        }

        public Color4 MyColor { get; set; }

        public override void UpdateParameters(ColorTransformContext context)
        {
            Parameters.Set(MyColorTransformShaderKeys.MyColor, MyColor);

            // Copy parameters to parent
            base.UpdateParameters(context);
        }
    }
}
</target>
</trans-unit>
<trans-unit id="tu33" xml:space="preserve">
<source xml:lang="en"><x id="1"/>!Note<x id="2"/>
Make sure the class name in the file (eg <g id="3">MyColorTransform</g> in the class above) is the same as the filename (eg <g id="4">MyColorTransform.cs</g>).</source>
<target xml:lang="pt"><x id="1"/>!Note<x id="2"/>
Make sure the class name in the file (eg <g id="3">MyColorTransform</g> in the class above) is the same as the filename (eg <g id="4">MyColorTransform.cs</g>).</target>
</trans-unit>
<trans-unit id="tu34" xml:space="preserve">
<source xml:lang="en">Save all the files in the solution (<g id="1">File > Save All</g>).</source>
<target xml:lang="pt">Save all the files in the solution (<g id="1">File > Save All</g>).</target>
</trans-unit>
<trans-unit id="tu35" xml:space="preserve">
<source xml:lang="en">In Game Studio, reload the assemblies.</source>
<target xml:lang="pt">In Game Studio, reload the assemblies.</target>
</trans-unit>
<trans-unit id="tu36" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Reload assemblies<x id="2"/></source>
<target xml:lang="pt"><x id="1"/>Reload assemblies<x id="2"/></target>
</trans-unit>
<trans-unit id="tu37" xml:space="preserve">
<source xml:lang="en">The <g id="1">Asset View</g> lists the class and effect shader in the same directory as your scripts (eg <g id="2">MyGame.Game</g>).</source>
<target xml:lang="pt">The <g id="1">Asset View</g> lists the class and effect shader in the same directory as your scripts (eg <g id="2">MyGame.Game</g>).</target>
</trans-unit>
<trans-unit id="tu38" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Shader in Asset View<x id="2"/></source>
<target xml:lang="pt"><x id="1"/>Shader in Asset View<x id="2"/></target>
</trans-unit>
<trans-unit id="tu39" xml:space="preserve">
<source xml:lang="en"><x id="1"/>!Note<x id="2"/>
In some situations, Game Studio incorrectly detects the shader as a script, as in the screenshot below:</source>
<target xml:lang="pt"><x id="1"/>!Note<x id="2"/>
In some situations, Game Studio incorrectly detects the shader as a script, as in the screenshot below:</target>
</trans-unit>
<trans-unit id="tu40" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Shader as script<x id="2"/></source>
<target xml:lang="pt"><x id="1"/>Shader as script<x id="2"/></target>
</trans-unit>
<trans-unit id="tu41" xml:space="preserve">
<source xml:lang="en">If this happens, restart Game Studio (<g id="1">File > Reload project</g>).</source>
<target xml:lang="pt">If this happens, restart Game Studio (<g id="1">File > Reload project</g>).</target>
</trans-unit>
<trans-unit id="tu42" xml:space="preserve">
<source xml:lang="en">3. Use a custom color transform</source>
<target xml:lang="pt">3. Use a custom color transform</target>
</trans-unit>
<trans-unit id="tu43" xml:space="preserve">
<source xml:lang="en">In the <g id="1">Asset View</g> (in the bottom pane by default), double-click the <g id="2">Graphics Compositor</g> asset.</source>
<target xml:lang="pt">In the <g id="1">Asset View</g> (in the bottom pane by default), double-click the <g id="2">Graphics Compositor</g> asset.</target>
</trans-unit>
<trans-unit id="tu44" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Graphics Compositor asset<x id="2"/></source>
<target xml:lang="pt"><x id="1"/>Graphics Compositor asset<x id="2"/></target>
</trans-unit>
<trans-unit id="tu45" xml:space="preserve">
<source xml:lang="en">The <g id="1">graphics compositor editor</g> opens.</source>
<target xml:lang="pt">The <g id="1">graphics compositor editor</g> opens.</target>
</trans-unit>
<trans-unit id="tu46" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Graphics Compositor editor<x id="2"/></source>
<target xml:lang="pt"><x id="1"/>Graphics Compositor editor<x id="2"/></target>
</trans-unit>
<trans-unit id="tu47" xml:space="preserve">
<source xml:lang="en">Select the <g id="1">Post-processing effects</g> node.</source>
<target xml:lang="pt">Select the <g id="1">Post-processing effects</g> node.</target>
</trans-unit>
<trans-unit id="tu48" xml:space="preserve">
<source xml:lang="en">In the <g id="1">Property Grid</g>, under <g id="2">Color transforms</g>, click <x id="3"/>Green plus button<x id="4"/> (<g id="5">Change</g>) and select your color transform (eg <g id="6">MyColorTransform</g>).</source>
<target xml:lang="pt">In the <g id="1">Property Grid</g>, under <g id="2">Color transforms</g>, click <x id="3"/>Green plus button<x id="4"/> (<g id="5">Change</g>) and select your color transform (eg <g id="6">MyColorTransform</g>).</target>
</trans-unit>
<trans-unit id="tu49" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Add script<x id="2"/></source>
<target xml:lang="pt"><x id="1"/>Add script<x id="2"/></target>
</trans-unit>
<trans-unit id="tu50" xml:space="preserve">
<source xml:lang="en">To enable and disable the effect, use the check box next to the item.</source>
<target xml:lang="pt">To enable and disable the effect, use the check box next to the item.</target>
</trans-unit>
<trans-unit id="tu51" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Enable and disable custom post effect<x id="2"/></source>
<target xml:lang="pt"><x id="1"/>Enable and disable custom post effect<x id="2"/></target>
</trans-unit>
<trans-unit id="tu52" xml:space="preserve">
<source xml:lang="en">To edit the public properties you specified in the class, expand the item.</source>
<target xml:lang="pt">To edit the public properties you specified in the class, expand the item.</target>
</trans-unit>
<trans-unit id="tu53" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Expand item<x id="2"/></source>
<target xml:lang="pt"><x id="1"/>Expand item<x id="2"/></target>
</trans-unit>
<trans-unit id="tu54" xml:space="preserve">
<source xml:lang="en">When you adjust the properties, Game Studio updates the effect automatically.</source>
<target xml:lang="pt">When you adjust the properties, Game Studio updates the effect automatically.</target>
</trans-unit>
<trans-unit id="tu55" xml:space="preserve">
<source xml:lang="en"><x id="1"/>!Warning<x id="2"/>
Unfortunately, this part of Game Studio has a memory leak problem. Every time you change a value in the graphics compositor, it uses 60MB of memory. To prevent Game Studio using too much memory, we recommend you restart it after you change a property a few times. This is a known issue.</source>
<target xml:lang="pt"><x id="1"/>!Warning<x id="2"/>
Unfortunately, this part of Game Studio has a memory leak problem. Every time you change a value in the graphics compositor, it uses 60MB of memory. To prevent Game Studio using too much memory, we recommend you restart it after you change a property a few times. This is a known issue.</target>
</trans-unit>
<trans-unit id="tu56" xml:space="preserve">
<source xml:lang="en">See also</source>
<target xml:lang="pt">See also</target>
</trans-unit>
<trans-unit id="tu57" xml:space="preserve">
<source xml:lang="en"><g id="1">Shading language</g></source>
<target xml:lang="pt"><g id="1">Shading language</g></target>
</trans-unit>
<trans-unit id="tu58" xml:space="preserve">
<source xml:lang="en"><g id="1">Custom shaders</g></source>
<target xml:lang="pt"><g id="1">Custom shaders</g></target>
</trans-unit>
<trans-unit id="tu59" xml:space="preserve">
<source xml:lang="en"><g id="1">Graphics compositor</g></source>
<target xml:lang="pt"><g id="1">Graphics compositor</g></target>
</trans-unit>
<trans-unit id="tu60" xml:space="preserve">
<source xml:lang="en"><g id="1">Post effects</g></source>
<target xml:lang="pt"><g id="1">Post effects</g></target>
</trans-unit>
<trans-unit id="tu61" xml:space="preserve">
<source xml:lang="en"><g id="1">Color transforms</g></source>
<target xml:lang="pt"><g id="1">Color transforms</g></target>
</trans-unit>
<trans-unit id="tu62" xml:space="preserve">
<source xml:lang="en"><g id="1">Stride Visual Studio extension</g></source>
<target xml:lang="pt"><g id="1">Stride Visual Studio extension</g></target>
</trans-unit>
</body>
</file>
</xliff>
