<?xml version="1.0" encoding="UTF-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:okp="okapi-framework:xliff-extensions" xmlns:its="http://www.w3.org/2005/11/its" xmlns:itsxlf="http://www.w3.org/ns/its-xliff/" its:version="2.0">
<file original="/D:/repos/rr/source/manual/graphics/low-level-api/spritefont.md" source-language="en" target-language="pt" datatype="x-text/x-markdown" okp:inputEncoding="UTF-8">
<body>
<trans-unit id="tu1" xml:space="preserve">
<source xml:lang="en">SpriteFont</source>
<target xml:lang="pt">SpriteFont</target>
</trans-unit>
<trans-unit id="tu2" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Advanced<x id="2"/>
<x id="3"/>Programmer<x id="4"/></source>
<target xml:lang="pt"><x id="1"/>Advanced<x id="2"/>
<x id="3"/>Programmer<x id="4"/></target>
</trans-unit>
<trans-unit id="tu3" xml:space="preserve">
<source xml:lang="en">The @'Stride.Graphics.SpriteFont' class is a convenient way to draw text. It works with the @'Stride.Graphics.SpriteBatch' class.</source>
<target xml:lang="pt">The @'Stride.Graphics.SpriteFont' class is a convenient way to draw text. It works with the @'Stride.Graphics.SpriteBatch' class.</target>
</trans-unit>
<trans-unit id="tu4" xml:space="preserve">
<source xml:lang="en"><x id="1"/>!Note<x id="2"/>
You need to put all custom code in a <g id="3">Custom scene renderer</g> to include it in the composition.</source>
<target xml:lang="pt"><x id="1"/>!Note<x id="2"/>
You need to put all custom code in a <g id="3">Custom scene renderer</g> to include it in the composition.</target>
</trans-unit>
<trans-unit id="tu5" xml:space="preserve">
<source xml:lang="en">Load a spriteFont</source>
<target xml:lang="pt">Load a spriteFont</target>
</trans-unit>
<trans-unit id="tu6" xml:space="preserve">
<source xml:lang="en">After a font asset is compiled it can be loaded as a @'Stride.Graphics.SpriteFont' instance using the @'Stride.Core.Serialization.Assets.ContentManager'. It contains all the options to display a text (bitmaps, kerning, line spacing etc).</source>
<target xml:lang="pt">After a font asset is compiled it can be loaded as a @'Stride.Graphics.SpriteFont' instance using the @'Stride.Core.Serialization.Assets.ContentManager'. It contains all the options to display a text (bitmaps, kerning, line spacing etc).</target>
</trans-unit>
<trans-unit id="tu7" xml:space="preserve">
<source xml:lang="en"><g id="1">Code:</g> Load a SpriteFont</source>
<target xml:lang="pt"><g id="1">Code:</g> Load a SpriteFont</target>
</trans-unit>
<trans-unit id="tu8" xml:space="preserve">
<source xml:lang="en">var myFont = Content.Load&lt;SpriteFont>("MyFont");
</source>
<target xml:lang="pt">var myFont = Content.Load&lt;SpriteFont>("MyFont");
</target>
</trans-unit>
<trans-unit id="tu9" xml:space="preserve">
<source xml:lang="en">Write text on screen</source>
<target xml:lang="pt">Write text on screen</target>
</trans-unit>
<trans-unit id="tu10" xml:space="preserve">
<source xml:lang="en">Once the font is loaded, you can display any text with a @'Stride.Graphics.SpriteBatch'. The @'Stride.Graphics.SpriteBatch.DrawString' method performs the draw. For more information about the SpriteBatch, see the <g id="1">SpriteBatch</g> page.</source>
<target xml:lang="pt">Once the font is loaded, you can display any text with a @'Stride.Graphics.SpriteBatch'. The @'Stride.Graphics.SpriteBatch.DrawString' method performs the draw. For more information about the SpriteBatch, see the <g id="1">SpriteBatch</g> page.</target>
</trans-unit>
<trans-unit id="tu11" xml:space="preserve">
<source xml:lang="en"><g id="1">Code:</g> Write text</source>
<target xml:lang="pt"><g id="1">Code:</g> Write text</target>
</trans-unit>
<trans-unit id="tu12" xml:space="preserve">
<source xml:lang="en">// create the SpriteBatch
var spriteBatch = new SpriteBatch(GraphicsDevice);

// don't forget the begin
spriteBatch.Begin(GraphicsContext);
 
// draw the text "Helloworld!" in red from the center of the screen
spriteBatch.DrawString(myFont, "Helloworld!", new Vector2(0.5, 0.5), Color.Red);
 
// don't forget the end
spriteBatch.End();
</source>
<target xml:lang="pt">// create the SpriteBatch
var spriteBatch = new SpriteBatch(GraphicsDevice);

// don't forget the begin
spriteBatch.Begin(GraphicsContext);
 
// draw the text "Helloworld!" in red from the center of the screen
spriteBatch.DrawString(myFont, "Helloworld!", new Vector2(0.5, 0.5), Color.Red);
 
// don't forget the end
spriteBatch.End();
</target>
</trans-unit>
<trans-unit id="tu13" xml:space="preserve">
<source xml:lang="en">The various overloads let you specify the text's orientation, scale, depth, origin, etc. You can also apply some @'Stride.Graphics.SpriteEffects' to the text:</source>
<target xml:lang="pt">The various overloads let you specify the text's orientation, scale, depth, origin, etc. You can also apply some @'Stride.Graphics.SpriteEffects' to the text:</target>
</trans-unit>
<trans-unit id="tu14" xml:space="preserve">
<source xml:lang="en">None</source>
<target xml:lang="pt">None</target>
</trans-unit>
<trans-unit id="tu15" xml:space="preserve">
<source xml:lang="en">FlipHorizontally</source>
<target xml:lang="pt">FlipHorizontally</target>
</trans-unit>
<trans-unit id="tu16" xml:space="preserve">
<source xml:lang="en">FlipVertically</source>
<target xml:lang="pt">FlipVertically</target>
</trans-unit>
<trans-unit id="tu17" xml:space="preserve">
<source xml:lang="en">FlipBoth</source>
<target xml:lang="pt">FlipBoth</target>
</trans-unit>
<trans-unit id="tu18" xml:space="preserve">
<source xml:lang="en"><g id="1">Code:</g> Advanced text drawing</source>
<target xml:lang="pt"><g id="1">Code:</g> Advanced text drawing</target>
</trans-unit>
<trans-unit id="tu19" xml:space="preserve">
<source xml:lang="en">// draw the text "Hello world!" upside-down in red from the center of the screen
spriteBatch.DrawString(myFont, "Hello world!", new Vector2(0.5, 0.5), Color.Red, 0, new Vector2(0, 0), new Vector2(1,1), SpriteEffects.FlipVertically, 0);
</source>
<target xml:lang="pt">// draw the text "Hello world!" upside-down in red from the center of the screen
spriteBatch.DrawString(myFont, "Hello world!", new Vector2(0.5, 0.5), Color.Red, 0, new Vector2(0, 0), new Vector2(1,1), SpriteEffects.FlipVertically, 0);
</target>
</trans-unit>
<trans-unit id="tu20" xml:space="preserve">
<source xml:lang="en">See also</source>
<target xml:lang="pt">See also</target>
</trans-unit>
<trans-unit id="tu21" xml:space="preserve">
<source xml:lang="en"><g id="1">SpriteBatch</g></source>
<target xml:lang="pt"><g id="1">SpriteBatch</g></target>
</trans-unit>
</body>
</file>
</xliff>
