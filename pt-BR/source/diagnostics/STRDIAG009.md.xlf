<?xml version="1.0" encoding="UTF-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:okp="okapi-framework:xliff-extensions" xmlns:its="http://www.w3.org/2005/11/its" xmlns:itsxlf="http://www.w3.org/ns/its-xliff/" its:version="2.0">
<file original="/D:/repos/stride-docs/en/diagnostics/STRDIAG009.md" source-language="en" target-language="pt" datatype="x-text/x-markdown" okp:inputEncoding="UTF-8">
<body>
<trans-unit id="tu1" xml:space="preserve">
<source xml:lang="en">Diagnostics Warning STRDIAG009</source>
<target xml:lang="pt">Diagnostics Warning STRDIAG009</target>
</trans-unit>
<trans-unit id="tu2" xml:space="preserve">
<source xml:lang="en">The member '{0}' implements IDictionary&lt;T,K> with an unsupported type for the key. Only primitive types ( like int,float,.. ) are supported or string or enums as the Dictionary Key in asset serialization. When used in other contexts the warning may not apply and can be suppressed.</source>
<target xml:lang="pt">The member '{0}' implements IDictionary&lt;T,K> with an unsupported type for the key. Only primitive types ( like int,float,.. ) are supported or string or enums as the Dictionary Key in asset serialization. When used in other contexts the warning may not apply and can be suppressed.</target>
</trans-unit>
<trans-unit id="tu3" xml:space="preserve">
<source xml:lang="en">Explanation</source>
<target xml:lang="pt">Explanation</target>
</trans-unit>
<trans-unit id="tu4" xml:space="preserve">
<source xml:lang="en">By default, Stride serializers only support primitive types and <g id="1">string</g> as keys in an <g id="2">IDictionary</g>. However, it is possible to extend this support, making the warning not entirely accurate in all cases.</source>
<target xml:lang="pt">By default, Stride serializers only support primitive types and <g id="1">string</g> as keys in an <g id="2">IDictionary</g>. However, it is possible to extend this support, making the warning not entirely accurate in all cases.</target>
</trans-unit>
<trans-unit id="tu5" xml:space="preserve">
<source xml:lang="en">Example</source>
<target xml:lang="pt">Example</target>
</trans-unit>
<trans-unit id="tu6" xml:space="preserve">
<source xml:lang="en">The following example generates STRDIAG009:</source>
<target xml:lang="pt">The following example generates STRDIAG009:</target>
</trans-unit>
<trans-unit id="tu7" xml:space="preserve">
<source xml:lang="en">using Stride.Core;

public class STRDIAG009
{
    [DataMember]
    public Dictionary&lt;ClassType, AnyType>

    [DataMember]
    public Dictionary&lt;StructType, AnyType>

    [DataMember]
    public Dictionary&lt;InterfaceType, AnyType>
}
</source>
<target xml:lang="pt">using Stride.Core;

public class STRDIAG009
{
    [DataMember]
    public Dictionary&lt;ClassType, AnyType>

    [DataMember]
    public Dictionary&lt;StructType, AnyType>

    [DataMember]
    public Dictionary&lt;InterfaceType, AnyType>
}
</target>
</trans-unit>
<trans-unit id="tu8" xml:space="preserve">
<source xml:lang="en">Solution</source>
<target xml:lang="pt">Solution</target>
</trans-unit>
<trans-unit id="tu9" xml:space="preserve">
<source xml:lang="en">To resolve the warning, remove the @Stride.Core.DataMemberAttribute. Or change the key of the <g id="1">IDictionary</g> to a supported type. Add a pragma Suppression in the IDE if it is a valid type.</source>
<target xml:lang="pt">To resolve the warning, remove the @Stride.Core.DataMemberAttribute. Or change the key of the <g id="1">IDictionary</g> to a supported type. Add a pragma Suppression in the IDE if it is a valid type.</target>
</trans-unit>
<trans-unit id="tu10" xml:space="preserve">
<source xml:lang="en">References</source>
<target xml:lang="pt">References</target>
</trans-unit>
<trans-unit id="tu11" xml:space="preserve">
<source xml:lang="en"><g id="1">Serialisation</g></source>
<target xml:lang="pt"><g id="1">Serialisation</g></target>
</trans-unit>
</body>
</file>
</xliff>
