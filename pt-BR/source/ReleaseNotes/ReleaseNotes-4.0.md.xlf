<?xml version="1.0" encoding="UTF-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:okp="okapi-framework:xliff-extensions" xmlns:its="http://www.w3.org/2005/11/its" xmlns:itsxlf="http://www.w3.org/ns/its-xliff/" its:version="2.0">
<file original="/D:/repos/rr/source/ReleaseNotes/ReleaseNotes-4.0.md" source-language="en" target-language="pt" datatype="x-text/x-markdown" okp:inputEncoding="UTF-8">
<body>
<trans-unit id="tu1" xml:space="preserve">
<source xml:lang="en">Stride 4.0 Release Notes</source>
<target xml:lang="pt">Stride 4.0 Release Notes</target>
</trans-unit>
<trans-unit id="tu2" xml:space="preserve">
<source xml:lang="en">February 1st, 2021</source>
<target xml:lang="pt">February 1st, 2021</target>
</trans-unit>
<trans-unit id="tu3" xml:space="preserve">
<source xml:lang="en">Xenko is now Stride!</source>
<target xml:lang="pt">Xenko is now Stride!</target>
</trans-unit>
<trans-unit id="tu4" xml:space="preserve">
<source xml:lang="en">The Xenko game engine has been renamed to Stride. From now on, all source code, blogs, and tutorials will use the name ‘Stride’ instead of ‘Xenko’.</source>
<target xml:lang="pt">The Xenko game engine has been renamed to Stride. From now on, all source code, blogs, and tutorials will use the name ‘Stride’ instead of ‘Xenko’.</target>
</trans-unit>
<trans-unit id="tu5" xml:space="preserve">
<source xml:lang="en">Here is the new logo:</source>
<target xml:lang="pt">Here is the new logo:</target>
</trans-unit>
<trans-unit id="tu6" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Stride Logo<x id="2"/></source>
<target xml:lang="pt"><x id="1"/>Stride Logo<x id="2"/></target>
</trans-unit>
<trans-unit id="tu7" xml:space="preserve">
<source xml:lang="en">More details available on the <g id="1">dedicated blog post</g></source>
<target xml:lang="pt">More details available on the <g id="1">dedicated blog post</g></target>
</trans-unit>
<trans-unit id="tu8" xml:space="preserve">
<source xml:lang="en">Voxel Cone Tracing GI</source>
<target xml:lang="pt">Voxel Cone Tracing GI</target>
</trans-unit>
<trans-unit id="tu9" xml:space="preserve">
<source xml:lang="en">Thanks to a substantial contribution from Sean Boettger and sponsored by David Jeske, Stride now supports Voxel Cone Tracing GI!</source>
<target xml:lang="pt">Thanks to a substantial contribution from Sean Boettger and sponsored by David Jeske, Stride now supports Voxel Cone Tracing GI!</target>
</trans-unit>
<trans-unit id="tu10" xml:space="preserve">
<source xml:lang="en">Here it is in action:</source>
<target xml:lang="pt">Here it is in action:</target>
</trans-unit>
<group id="sd1_ssf1" resname="sub-filter:sd1">
<trans-unit id="sd1_sf1_tu1" resname="sd1_1" xml:space="preserve">
<source xml:lang="en"><g id="1"></g></source>
<target xml:lang="pt"><g id="1"></g></target>
</trans-unit>
</group>
<trans-unit id="tu11" xml:space="preserve">
<source xml:lang="en">As you can see, there are many customizations and settings available in the editor:</source>
<target xml:lang="pt">As you can see, there are many customizations and settings available in the editor:</target>
</trans-unit>
<trans-unit id="tu12" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Voxel Cone Tracing GI<x id="2"/></source>
<target xml:lang="pt"><x id="1"/>Voxel Cone Tracing GI<x id="2"/></target>
</trans-unit>
<trans-unit id="tu13" xml:space="preserve">
<source xml:lang="en">There's a documentation page explaining <g id="1">how to set up the project with Voxel Cone Tracing GI</g>.</source>
<target xml:lang="pt">There's a documentation page explaining <g id="1">how to set up the project with Voxel Cone Tracing GI</g>.</target>
</trans-unit>
<trans-unit id="tu14" xml:space="preserve">
<source xml:lang="en">Here's the original <g id="1">forum post</g> and <g id="2">pull request</g>. Thanks again for this great contribution!</source>
<target xml:lang="pt">Here's the original <g id="1">forum post</g> and <g id="2">pull request</g>. Thanks again for this great contribution!</target>
</trans-unit>
<trans-unit id="tu15" xml:space="preserve">
<source xml:lang="en">.NET 5</source>
<target xml:lang="pt">.NET 5</target>
</trans-unit>
<trans-unit id="tu16" xml:space="preserve">
<source xml:lang="en">Stride editor and toolchain is now running with .NET 5! Runtime has been working with .NET Core for a few versions already.</source>
<target xml:lang="pt">Stride editor and toolchain is now running with .NET 5! Runtime has been working with .NET Core for a few versions already.</target>
</trans-unit>
<trans-unit id="tu17" xml:space="preserve">
<source xml:lang="en">This allows us to have scripts and custom assets in a project targetting <g id="1">.NET Standard 2.1</g> or <g id="2">.NET 5</g>.</source>
<target xml:lang="pt">This allows us to have scripts and custom assets in a project targetting <g id="1">.NET Standard 2.1</g> or <g id="2">.NET 5</g>.</target>
</trans-unit>
<trans-unit id="tu18" xml:space="preserve">
<source xml:lang="en">If you have scripts or custom assets in a .NET Framework project rather than a .NET Standard project, you can still choose between <g id="1">.NET 5</g> and <g id="2">.NET Framework</g> within the launcher:</source>
<target xml:lang="pt">If you have scripts or custom assets in a .NET Framework project rather than a .NET Standard project, you can still choose between <g id="1">.NET 5</g> and <g id="2">.NET Framework</g> within the launcher:</target>
</trans-unit>
<trans-unit id="tu19" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Framework selection in launcher<x id="2"/></source>
<target xml:lang="pt"><x id="1"/>Framework selection in launcher<x id="2"/></target>
</trans-unit>
<trans-unit id="tu20" xml:space="preserve">
<source xml:lang="en">The framework will also be displayed in the Game Studio toolbar for easier identification while both coexist.</source>
<target xml:lang="pt">The framework will also be displayed in the Game Studio toolbar for easier identification while both coexist.</target>
</trans-unit>
<trans-unit id="tu21" xml:space="preserve">
<source xml:lang="en">.NET Framework version can be considered deprecated and will likely be removed in a future release (likely 4.1) to allow us to take full advantage of <g id="1">C# 8.0</g> and soon-to-come <g id="2">C# 9.0</g>.</source>
<target xml:lang="pt">.NET Framework version can be considered deprecated and will likely be removed in a future release (likely 4.1) to allow us to take full advantage of <g id="1">C# 8.0</g> and soon-to-come <g id="2">C# 9.0</g>.</target>
</trans-unit>
<trans-unit id="tu22" xml:space="preserve">
<source xml:lang="en">We also expect dropping .NET Framework and supporting only .NET 5 will greatly simplify our installation process since we won't depend on specific workloads or packages of Visual Studio being installed anymore. This was a recurring issue with our users.</source>
<target xml:lang="pt">We also expect dropping .NET Framework and supporting only .NET 5 will greatly simplify our installation process since we won't depend on specific workloads or packages of Visual Studio being installed anymore. This was a recurring issue with our users.</target>
</trans-unit>
<trans-unit id="tu23" xml:space="preserve">
<source xml:lang="en">Flexible GPU Instancing</source>
<target xml:lang="pt">Flexible GPU Instancing</target>
</trans-unit>
<trans-unit id="tu24" xml:space="preserve">
<source xml:lang="en">Aka geometry instancing. Thanks to another big community contribution sponsored by <g id="1">vvvv</g>, Stride now supports GPU instancing per model.</source>
<target xml:lang="pt">Aka geometry instancing. Thanks to another big community contribution sponsored by <g id="1">vvvv</g>, Stride now supports GPU instancing per model.</target>
</trans-unit>
<trans-unit id="tu25" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Instancing Header<x id="2"/></source>
<target xml:lang="pt"><x id="1"/>Instancing Header<x id="2"/></target>
</trans-unit>
<trans-unit id="tu26" xml:space="preserve">
<source xml:lang="en">The nice thing about it is, that it plays together with the entity-component system: Simply add an Instancing component to an entity with a model. Then you can choose between 3 ways of how you generate the instances:</source>
<target xml:lang="pt">The nice thing about it is, that it plays together with the entity-component system: Simply add an Instancing component to an entity with a model. Then you can choose between 3 ways of how you generate the instances:</target>
</trans-unit>
<trans-unit id="tu27" xml:space="preserve">
<source xml:lang="en"><g id="1">EntityTransform</g>, uses the transformation of other entities with an Instance component. This allows you to add components like physics, audio, etc. to each instance.</source>
<target xml:lang="pt"><g id="1">EntityTransform</g>, uses the transformation of other entities with an Instance component. This allows you to add components like physics, audio, etc. to each instance.</target>
</trans-unit>
<trans-unit id="tu28" xml:space="preserve">
<source xml:lang="en"><g id="1">UserArray</g>, for providing an array of matrices via script</source>
<target xml:lang="pt"><g id="1">UserArray</g>, for providing an array of matrices via script</target>
</trans-unit>
<trans-unit id="tu29" xml:space="preserve">
<source xml:lang="en"><g id="1">UserBuffer</g>, for providing a structured buffer (GPU resource) of matrices via script</source>
<target xml:lang="pt"><g id="1">UserBuffer</g>, for providing a structured buffer (GPU resource) of matrices via script</target>
</trans-unit>
<trans-unit id="tu30" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Instancing Types<x id="2"/></source>
<target xml:lang="pt"><x id="1"/>Instancing Types<x id="2"/></target>
</trans-unit>
<trans-unit id="tu31" xml:space="preserve">
<source xml:lang="en"><g id="1">UserArray</g> and <g id="2">UserBuffer</g> even allow you to specify how the matrix is multiplied with the parent transformation.</source>
<target xml:lang="pt"><g id="1">UserArray</g> and <g id="2">UserBuffer</g> even allow you to specify how the matrix is multiplied with the parent transformation.</target>
</trans-unit>
<trans-unit id="tu32" xml:space="preserve">
<source xml:lang="en">It even works with skinning:</source>
<target xml:lang="pt">It even works with skinning:</target>
</trans-unit>
<trans-unit id="tu33" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Instancing Skinning<x id="2"/></source>
<target xml:lang="pt"><x id="1"/>Instancing Skinning<x id="2"/></target>
</trans-unit>
<trans-unit id="tu34" xml:space="preserve">
<source xml:lang="en">Picking individual instances in Game Studio works as well and selects the entity with the respective Instance component.</source>
<target xml:lang="pt">Picking individual instances in Game Studio works as well and selects the entity with the respective Instance component.</target>
</trans-unit>
<trans-unit id="tu35" xml:space="preserve">
<source xml:lang="en">There are also two new entity templates for easy setup:</source>
<target xml:lang="pt">There are also two new entity templates for easy setup:</target>
</trans-unit>
<trans-unit id="tu36" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Instancing Templates<x id="2"/></source>
<target xml:lang="pt"><x id="1"/>Instancing Templates<x id="2"/></target>
</trans-unit>
<trans-unit id="tu37" xml:space="preserve">
<source xml:lang="en">An example project that shows the new features can be found here: <g id="1">StrideTransformationInstancing</g></source>
<target xml:lang="pt">An example project that shows the new features can be found here: <g id="1">StrideTransformationInstancing</g></target>
</trans-unit>
<trans-unit id="tu38" xml:space="preserve">
<source xml:lang="en">Graphics API: different selection mechanism + Vulkan improvements</source>
<target xml:lang="pt">Graphics API: different selection mechanism + Vulkan improvements</target>
</trans-unit>
<trans-unit id="tu39" xml:space="preserve">
<source xml:lang="en">There's been a big overhaul on Stride build system to make Graphics API selection work in a more future-proof way.</source>
<target xml:lang="pt">There's been a big overhaul on Stride build system to make Graphics API selection work in a more future-proof way.</target>
</trans-unit>
<trans-unit id="tu40" xml:space="preserve">
<source xml:lang="en">It was previously relying on the custom <g id="1">RuntimeIdentifier</g> being set in the solution. This didn't work very well because it was completely orthogonal to the existing <g id="2">RuntimeIdentifier</g>, and sometimes not having good fallbacks.</source>
<target xml:lang="pt">It was previously relying on the custom <g id="1">RuntimeIdentifier</g> being set in the solution. This didn't work very well because it was completely orthogonal to the existing <g id="2">RuntimeIdentifier</g>, and sometimes not having good fallbacks.</target>
</trans-unit>
<trans-unit id="tu41" xml:space="preserve">
<source xml:lang="en">From now on, the user project will use <g id="1">StrideGraphicsApi</g> in the <g id="2">.csproj</g> project file to specify the graphics API. We hope to expose this in the editor later.</source>
<target xml:lang="pt">From now on, the user project will use <g id="1">StrideGraphicsApi</g> in the <g id="2">.csproj</g> project file to specify the graphics API. We hope to expose this in the editor later.</target>
</trans-unit>
<trans-unit id="tu42" xml:space="preserve">
<source xml:lang="en">We also took the opportunity to improve the state of Vulkan renderer (thanks to a switch to <g id="1">Vortice.Vulkan bindings</g> from <g id="2">Amer Koleci</g>) and automatize graphics unit tests, currently running for D3D11 and Vulkan.</source>
<target xml:lang="pt">We also took the opportunity to improve the state of Vulkan renderer (thanks to a switch to <g id="1">Vortice.Vulkan bindings</g> from <g id="2">Amer Koleci</g>) and automatize graphics unit tests, currently running for D3D11 and Vulkan.</target>
</trans-unit>
<trans-unit id="tu43" xml:space="preserve">
<source xml:lang="en">It's still a work in progress so expect more in future releases.</source>
<target xml:lang="pt">It's still a work in progress so expect more in future releases.</target>
</trans-unit>
<trans-unit id="tu44" xml:space="preserve">
<source xml:lang="en">Documentation &amp; Tutorials</source>
<target xml:lang="pt">Documentation &amp; Tutorials</target>
</trans-unit>
<trans-unit id="tu45" xml:space="preserve">
<source xml:lang="en">The first 10 C# beginner tutorials are recorded and uploaded to the official Stride Youtube channel. You check out <g id="1">the playlist here</g>.</source>
<target xml:lang="pt">The first 10 C# beginner tutorials are recorded and uploaded to the official Stride Youtube channel. You check out <g id="1">the playlist here</g>.</target>
</trans-unit>
<trans-unit id="tu46" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Youtube Playlist<x id="2"/></source>
<target xml:lang="pt"><x id="1"/>Youtube Playlist<x id="2"/></target>
</trans-unit>
<trans-unit id="tu47" xml:space="preserve">
<source xml:lang="en">These videos are the video equivalent of the existing <g id="1">online documentation</g> for the C# beginner template tutorials and the 'new project' template when creating a new project from the Stride launcher.</source>
<target xml:lang="pt">These videos are the video equivalent of the existing <g id="1">online documentation</g> for the C# beginner template tutorials and the 'new project' template when creating a new project from the Stride launcher.</target>
</trans-unit>
<trans-unit id="tu48" xml:space="preserve">
<source xml:lang="en">The C# beginner series should be fully recorded by the end of July 2020.
After those videos are done, Jorn will put his focus on the C# Intermediate project template. Here a is work in progress screenshot on the raycasting tutorial:</source>
<target xml:lang="pt">The C# beginner series should be fully recorded by the end of July 2020.
After those videos are done, Jorn will put his focus on the C# Intermediate project template. Here a is work in progress screenshot on the raycasting tutorial:</target>
</trans-unit>
<trans-unit id="tu49" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Raycast tutorial<x id="2"/></source>
<target xml:lang="pt"><x id="1"/>Raycast tutorial<x id="2"/></target>
</trans-unit>
<trans-unit id="tu50" xml:space="preserve">
<source xml:lang="en">New Developers are Welcome!</source>
<target xml:lang="pt">New Developers are Welcome!</target>
</trans-unit>
<trans-unit id="tu51" xml:space="preserve">
<source xml:lang="en">The Stride GitHub repository has more closed pull requests than open issues. This is a good sign! But in order to move faster and adapt to new technologies, we would be very happy to see more new talents in our friendly and professional developer community.</source>
<target xml:lang="pt">The Stride GitHub repository has more closed pull requests than open issues. This is a good sign! But in order to move faster and adapt to new technologies, we would be very happy to see more new talents in our friendly and professional developer community.</target>
</trans-unit>
<trans-unit id="tu52" xml:space="preserve">
<source xml:lang="en">There are several good reasons to join us:</source>
<target xml:lang="pt">There are several good reasons to join us:</target>
</trans-unit>
<trans-unit id="tu53" xml:space="preserve">
<source xml:lang="en">Writing engine code in C# is fun and quite productive</source>
<target xml:lang="pt">Writing engine code in C# is fun and quite productive</target>
</trans-unit>
<trans-unit id="tu54" xml:space="preserve">
<source xml:lang="en">Stride users will work with what you create</source>
<target xml:lang="pt">Stride users will work with what you create</target>
</trans-unit>
<trans-unit id="tu55" xml:space="preserve">
<source xml:lang="en">We are happy to help, should you get stuck</source>
<target xml:lang="pt">We are happy to help, should you get stuck</target>
</trans-unit>
<trans-unit id="tu56" xml:space="preserve">
<source xml:lang="en">You can learn a lot, the Stride code base is very professional and has high-quality standards</source>
<target xml:lang="pt">You can learn a lot, the Stride code base is very professional and has high-quality standards</target>
</trans-unit>
<trans-unit id="tu57" xml:space="preserve">
<source xml:lang="en">An open-source contribution is a great addition to your portfolio</source>
<target xml:lang="pt">An open-source contribution is a great addition to your portfolio</target>
</trans-unit>
<trans-unit id="tu58" xml:space="preserve">
<source xml:lang="en">No matter whether you (or someone you know) can contribute documentation updates, UI improvements, bug fixes, or new rendering technologies, we welcome everyone!</source>
<target xml:lang="pt">No matter whether you (or someone you know) can contribute documentation updates, UI improvements, bug fixes, or new rendering technologies, we welcome everyone!</target>
</trans-unit>
</body>
</file>
</xliff>
