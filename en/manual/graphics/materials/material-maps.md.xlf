<?xml version="1.0" encoding="UTF-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:okp="okapi-framework:xliff-extensions" xmlns:its="http://www.w3.org/2005/11/its" xmlns:itsxlf="http://www.w3.org/ns/its-xliff/" its:version="2.0">
<file original="/D:/repos/rr/source/manual/graphics/materials/material-maps.md" source-language="en" target-language="pt" datatype="x-text/x-markdown" okp:inputEncoding="UTF-8">
<body>
<trans-unit id="tu1" xml:space="preserve">
<source xml:lang="en">Material maps</source>
<target xml:lang="pt">Material maps</target>
</trans-unit>
<trans-unit id="tu2" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Intermediate<x id="2"/>
<x id="3"/>Artist<x id="4"/>
<x id="5"/>Programmer<x id="6"/></source>
<target xml:lang="pt"><x id="1"/>Intermediate<x id="2"/>
<x id="3"/>Artist<x id="4"/>
<x id="5"/>Programmer<x id="6"/></target>
</trans-unit>
<trans-unit id="tu3" xml:space="preserve">
<source xml:lang="en"><g id="1">Material maps</g> calculate how materials are rendered. They can use two kinds of values: color (RGB) values or scalar (single float) values.</source>
<target xml:lang="pt"><g id="1">Material maps</g> calculate how materials are rendered. They can use two kinds of values: color (RGB) values or scalar (single float) values.</target>
</trans-unit>
<trans-unit id="tu4" xml:space="preserve">
<source xml:lang="en">You can use material maps for several purposes, including gloss maps, diffuse maps, or  blend maps (for combining <g id="1">material layers</g>)</source>
<target xml:lang="pt">You can use material maps for several purposes, including gloss maps, diffuse maps, or  blend maps (for combining <g id="1">material layers</g>)</target>
</trans-unit>
<trans-unit id="tu5" xml:space="preserve">
<source xml:lang="en">Material maps can fetch values using one of several providers:</source>
<target xml:lang="pt">Material maps can fetch values using one of several providers:</target>
</trans-unit>
<trans-unit id="tu6" xml:space="preserve">
<source xml:lang="en"><g id="1">Vertex stream</g>: a value taken from mesh attributes</source>
<target xml:lang="pt"><g id="1">Vertex stream</g>: a value taken from mesh attributes</target>
</trans-unit>
<trans-unit id="tu7" xml:space="preserve">
<source xml:lang="en"><g id="1">Binary operator</g>: a combination of any other two providers</source>
<target xml:lang="pt"><g id="1">Binary operator</g>: a combination of any other two providers</target>
</trans-unit>
<trans-unit id="tu8" xml:space="preserve">
<source xml:lang="en"><g id="1">Float4 / Float</g>: a constant value</source>
<target xml:lang="pt"><g id="1">Float4 / Float</g>: a constant value</target>
</trans-unit>
<trans-unit id="tu9" xml:space="preserve">
<source xml:lang="en"><g id="1">Color</g>: a hex color value</source>
<target xml:lang="pt"><g id="1">Color</g>: a hex color value</target>
</trans-unit>
<trans-unit id="tu10" xml:space="preserve">
<source xml:lang="en"><g id="1">Shader</g>: a value provided by a ComputeColor shader. This lets you use procedural values</source>
<target xml:lang="pt"><g id="1">Shader</g>: a value provided by a ComputeColor shader. This lets you use procedural values</target>
</trans-unit>
<trans-unit id="tu11" xml:space="preserve">
<source xml:lang="en"><g id="1">Texture</g>: a value sampled from a <g id="2">texture</g></source>
<target xml:lang="pt"><g id="1">Texture</g>: a value sampled from a <g id="2">texture</g></target>
</trans-unit>
<trans-unit id="tu12" xml:space="preserve">
<source xml:lang="en">To choose the provider, click <x id="1"/>Blue arrow button<x id="2"/> (<g id="3">Replace</g>) and select it from the drop-down menu:</source>
<target xml:lang="pt">To choose the provider, click <x id="1"/>Blue arrow button<x id="2"/> (<g id="3">Replace</g>) and select it from the drop-down menu:</target>
</trans-unit>
<trans-unit id="tu13" xml:space="preserve">
<source xml:lang="en"><x id="1"/>media/material-colors-1.png<x id="2"/></source>
<target xml:lang="pt"><x id="1"/>media/material-colors-1.png<x id="2"/></target>
</trans-unit>
<trans-unit id="tu14" xml:space="preserve">
<source xml:lang="en">Vertex stream</source>
<target xml:lang="pt">Vertex stream</target>
</trans-unit>
<trans-unit id="tu15" xml:space="preserve">
<source xml:lang="en">This provider takes a value from an attribute of the mesh of the model you apply the material to.</source>
<target xml:lang="pt">This provider takes a value from an attribute of the mesh of the model you apply the material to.</target>
</trans-unit>
<trans-unit id="tu16" xml:space="preserve">
<source xml:lang="en">It has two modes: <g id="1">Color Vertex Stream</g> and <g id="2">Custom Vertex Stream</g>. To switch between them, with <g id="3">Vertex Stream</g> selected as the provider, click <x id="4"/>Blue arrow button<x id="5"/> (<g id="6">Replace</g>) and choose the mode you want to use.</source>
<target xml:lang="pt">It has two modes: <g id="1">Color Vertex Stream</g> and <g id="2">Custom Vertex Stream</g>. To switch between them, with <g id="3">Vertex Stream</g> selected as the provider, click <x id="4"/>Blue arrow button<x id="5"/> (<g id="6">Replace</g>) and choose the mode you want to use.</target>
</trans-unit>
<trans-unit id="tu17" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Vertex stream mode<x id="2"/></source>
<target xml:lang="pt"><x id="1"/>Vertex stream mode<x id="2"/></target>
</trans-unit>
<trans-unit id="tu18" xml:space="preserve">
<source xml:lang="en">Color vertex stream</source>
<target xml:lang="pt">Color vertex stream</target>
</trans-unit>
<trans-unit id="tu19" xml:space="preserve">
<source xml:lang="en">Takes a color value from the mesh.</source>
<target xml:lang="pt">Takes a color value from the mesh.</target>
</trans-unit>
<trans-unit id="tu20" xml:space="preserve">
<source xml:lang="en">Property</source>
<target xml:lang="pt">Property</target>
</trans-unit>
<trans-unit id="tu21" xml:space="preserve">
<source xml:lang="en">Description</source>
<target xml:lang="pt">Description</target>
</trans-unit>
<trans-unit id="tu22" xml:space="preserve">
<source xml:lang="en">Index</source>
<target xml:lang="pt">Index</target>
</trans-unit>
<trans-unit id="tu23" xml:space="preserve">
<source xml:lang="en">The index in the named stream</source>
<target xml:lang="pt">The index in the named stream</target>
</trans-unit>
<trans-unit id="tu24" xml:space="preserve">
<source xml:lang="en">Channel</source>
<target xml:lang="pt">Channel</target>
</trans-unit>
<trans-unit id="tu25" xml:space="preserve">
<source xml:lang="en">The channel (RGBA) to sample from the stream</source>
<target xml:lang="pt">The channel (RGBA) to sample from the stream</target>
</trans-unit>
<trans-unit id="tu26" xml:space="preserve">
<source xml:lang="en">Custom vertex stream</source>
<target xml:lang="pt">Custom vertex stream</target>
</trans-unit>
<trans-unit id="tu27" xml:space="preserve">
<source xml:lang="en">Takes a value from the mesh channel you specify.</source>
<target xml:lang="pt">Takes a value from the mesh channel you specify.</target>
</trans-unit>
<trans-unit id="tu28" xml:space="preserve">
<source xml:lang="en">Property</source>
<target xml:lang="pt">Property</target>
</trans-unit>
<trans-unit id="tu29" xml:space="preserve">
<source xml:lang="en">Description</source>
<target xml:lang="pt">Description</target>
</trans-unit>
<trans-unit id="tu30" xml:space="preserve">
<source xml:lang="en">Name</source>
<target xml:lang="pt">Name</target>
</trans-unit>
<trans-unit id="tu31" xml:space="preserve">
<source xml:lang="en">Semantic name of the channel to read data from</source>
<target xml:lang="pt">Semantic name of the channel to read data from</target>
</trans-unit>
<trans-unit id="tu32" xml:space="preserve">
<source xml:lang="en">Channel</source>
<target xml:lang="pt">Channel</target>
</trans-unit>
<trans-unit id="tu33" xml:space="preserve">
<source xml:lang="en">The channel (RGBA) to sample from the stream</source>
<target xml:lang="pt">The channel (RGBA) to sample from the stream</target>
</trans-unit>
<trans-unit id="tu34" xml:space="preserve">
<source xml:lang="en">Binary operator</source>
<target xml:lang="pt">Binary operator</target>
</trans-unit>
<trans-unit id="tu35" xml:space="preserve">
<source xml:lang="en">Perform a binary operation from two color/scalar value providers. You can nest as many material maps inside binary operators as you need (including further binary operators).</source>
<target xml:lang="pt">Perform a binary operation from two color/scalar value providers. You can nest as many material maps inside binary operators as you need (including further binary operators).</target>
</trans-unit>
<trans-unit id="tu36" xml:space="preserve">
<source xml:lang="en">To choose how the operation works, click <x id="1"/>Blue arrow button<x id="2"/> (<g id="3">Replace</g>) and select from the drop-down menu. The operations are similar to options when blending layers in Photoshop.</source>
<target xml:lang="pt">To choose how the operation works, click <x id="1"/>Blue arrow button<x id="2"/> (<g id="3">Replace</g>) and select from the drop-down menu. The operations are similar to options when blending layers in Photoshop.</target>
</trans-unit>
<trans-unit id="tu37" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Operation mode<x id="2"/></source>
<target xml:lang="pt"><x id="1"/>Operation mode<x id="2"/></target>
</trans-unit>
<trans-unit id="tu38" xml:space="preserve">
<source xml:lang="en"><g id="1">Result = LeftColor  &lt;operator> RightColor</g></source>
<target xml:lang="pt"><g id="1">Result = LeftColor  &lt;operator> RightColor</g></target>
</trans-unit>
<trans-unit id="tu39" xml:space="preserve">
<source xml:lang="en"><x id="1"/>media/material-colors-4.png<x id="2"/></source>
<target xml:lang="pt"><x id="1"/>media/material-colors-4.png<x id="2"/></target>
</trans-unit>
<trans-unit id="tu40" xml:space="preserve">
<source xml:lang="en">Property</source>
<target xml:lang="pt">Property</target>
</trans-unit>
<trans-unit id="tu41" xml:space="preserve">
<source xml:lang="en">Description</source>
<target xml:lang="pt">Description</target>
</trans-unit>
<trans-unit id="tu42" xml:space="preserve">
<source xml:lang="en">Operator</source>
<target xml:lang="pt">Operator</target>
</trans-unit>
<trans-unit id="tu43" xml:space="preserve">
<source xml:lang="en">A binary operator (eg add, multiply, etc)</source>
<target xml:lang="pt">A binary operator (eg add, multiply, etc)</target>
</trans-unit>
<trans-unit id="tu44" xml:space="preserve">
<source xml:lang="en">Left</source>
<target xml:lang="pt">Left</target>
</trans-unit>
<trans-unit id="tu45" xml:space="preserve">
<source xml:lang="en">The left color/scalar used in the operation</source>
<target xml:lang="pt">The left color/scalar used in the operation</target>
</trans-unit>
<trans-unit id="tu46" xml:space="preserve">
<source xml:lang="en">Right</source>
<target xml:lang="pt">Right</target>
</trans-unit>
<trans-unit id="tu47" xml:space="preserve">
<source xml:lang="en">The right color/scalar used in the operation</source>
<target xml:lang="pt">The right color/scalar used in the operation</target>
</trans-unit>
<trans-unit id="tu48" xml:space="preserve">
<source xml:lang="en">Float4 / Float</source>
<target xml:lang="pt">Float4 / Float</target>
</trans-unit>
<trans-unit id="tu49" xml:space="preserve">
<source xml:lang="en">Provided directly as a constant value over the whole material.</source>
<target xml:lang="pt">Provided directly as a constant value over the whole material.</target>
</trans-unit>
<trans-unit id="tu50" xml:space="preserve">
<source xml:lang="en">In the case of RGB values, you control the RGBA value with the X, Y, Z and W values (<g id="1">Float4</g>).</source>
<target xml:lang="pt">In the case of RGB values, you control the RGBA value with the X, Y, Z and W values (<g id="1">Float4</g>).</target>
</trans-unit>
<trans-unit id="tu51" xml:space="preserve">
<source xml:lang="en"><x id="1"/>xyzw<x id="2"/></source>
<target xml:lang="pt"><x id="1"/>xyzw<x id="2"/></target>
</trans-unit>
<trans-unit id="tu52" xml:space="preserve">
<source xml:lang="en">In the case of scalar values, you control the value with a slider (<g id="1">Float</g>).</source>
<target xml:lang="pt">In the case of scalar values, you control the value with a slider (<g id="1">Float</g>).</target>
</trans-unit>
<trans-unit id="tu53" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Blend map slider<x id="2"/></source>
<target xml:lang="pt"><x id="1"/>Blend map slider<x id="2"/></target>
</trans-unit>
<trans-unit id="tu54" xml:space="preserve">
<source xml:lang="en">Color</source>
<target xml:lang="pt">Color</target>
</trans-unit>
<trans-unit id="tu55" xml:space="preserve">
<source xml:lang="en">A value provided from a color hex value. This is only available for material maps that use RGB values.</source>
<target xml:lang="pt">A value provided from a color hex value. This is only available for material maps that use RGB values.</target>
</trans-unit>
<trans-unit id="tu56" xml:space="preserve">
<source xml:lang="en"><x id="1"/>media/material-colors-3.png<x id="2"/></source>
<target xml:lang="pt"><x id="1"/>media/material-colors-3.png<x id="2"/></target>
</trans-unit>
<trans-unit id="tu57" xml:space="preserve">
<source xml:lang="en">Shader</source>
<target xml:lang="pt">Shader</target>
</trans-unit>
<trans-unit id="tu58" xml:space="preserve">
<source xml:lang="en">A value provided by a ComputeColor shader. This lets you use procedural values.</source>
<target xml:lang="pt">A value provided by a ComputeColor shader. This lets you use procedural values.</target>
</trans-unit>
<trans-unit id="tu59" xml:space="preserve">
<source xml:lang="en">For an example of a ComputeColor shader, see the <g id="1">Particle materials tutorial</g>.</source>
<target xml:lang="pt">For an example of a ComputeColor shader, see the <g id="1">Particle materials tutorial</g>.</target>
</trans-unit>
<trans-unit id="tu60" xml:space="preserve">
<source xml:lang="en">Texture</source>
<target xml:lang="pt">Texture</target>
</trans-unit>
<trans-unit id="tu61" xml:space="preserve">
<source xml:lang="en">Sample the color/scalar from a <g id="1">texture</g>.</source>
<target xml:lang="pt">Sample the color/scalar from a <g id="1">texture</g>.</target>
</trans-unit>
<trans-unit id="tu62" xml:space="preserve">
<source xml:lang="en">For example, the images below demonstrate how the texture changes the way Stride blends materials.</source>
<target xml:lang="pt">For example, the images below demonstrate how the texture changes the way Stride blends materials.</target>
</trans-unit>
<trans-unit id="tu63" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Blend map diagram<x id="2"/></source>
<target xml:lang="pt"><x id="1"/>Blend map diagram<x id="2"/></target>
</trans-unit>
<trans-unit id="tu64" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Blend map diagram<x id="2"/></source>
<target xml:lang="pt"><x id="1"/>Blend map diagram<x id="2"/></target>
</trans-unit>
<trans-unit id="tu65" xml:space="preserve">
<source xml:lang="en"><x id="1"/>media/material-colors-2.png<x id="2"/></source>
<target xml:lang="pt"><x id="1"/>media/material-colors-2.png<x id="2"/></target>
</trans-unit>
<trans-unit id="tu66" xml:space="preserve">
<source xml:lang="en">Property</source>
<target xml:lang="pt">Property</target>
</trans-unit>
<trans-unit id="tu67" xml:space="preserve">
<source xml:lang="en">Description</source>
<target xml:lang="pt">Description</target>
</trans-unit>
<trans-unit id="tu68" xml:space="preserve">
<source xml:lang="en">Texture</source>
<target xml:lang="pt">Texture</target>
</trans-unit>
<trans-unit id="tu69" xml:space="preserve">
<source xml:lang="en">A reference to a texture</source>
<target xml:lang="pt">A reference to a texture</target>
</trans-unit>
<trans-unit id="tu70" xml:space="preserve">
<source xml:lang="en">Channel</source>
<target xml:lang="pt">Channel</target>
</trans-unit>
<trans-unit id="tu71" xml:space="preserve">
<source xml:lang="en">The channel (R, G, B, A) used to extract the scalar value. Only valid for scalar textures</source>
<target xml:lang="pt">The channel (R, G, B, A) used to extract the scalar value. Only valid for scalar textures</target>
</trans-unit>
<trans-unit id="tu72" xml:space="preserve">
<source xml:lang="en">Texcoord Index</source>
<target xml:lang="pt">Texcoord Index</target>
</trans-unit>
<trans-unit id="tu73" xml:space="preserve">
<source xml:lang="en">The texture coordinates (u,v) to use from the mesh with this texture</source>
<target xml:lang="pt">The texture coordinates (u,v) to use from the mesh with this texture</target>
</trans-unit>
<trans-unit id="tu74" xml:space="preserve">
<source xml:lang="en">Filtering</source>
<target xml:lang="pt">Filtering</target>
</trans-unit>
<trans-unit id="tu75" xml:space="preserve">
<source xml:lang="en">The sampling method (eg Linear, Point, Anisotropic, etc)</source>
<target xml:lang="pt">The sampling method (eg Linear, Point, Anisotropic, etc)</target>
</trans-unit>
<trans-unit id="tu76" xml:space="preserve">
<source xml:lang="en">Address Mode U / V</source>
<target xml:lang="pt">Address Mode U / V</target>
</trans-unit>
<trans-unit id="sd1_sf7_tu1" resname="sd1_1" restype="x-paragraph" xml:space="preserve">
<source xml:lang="en"></source>
<target xml:lang="pt"></target>
</trans-unit>
<trans-unit id="tu77" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Defines how (u,v) coordinates are addressed</source>
<target xml:lang="pt"><x id="1"/>Defines how (u,v) coordinates are addressed</target>
</trans-unit>
<trans-unit id="tu78" xml:space="preserve">
<source xml:lang="en"><x id="1"/></source>
<target xml:lang="pt"><x id="1"/></target>
</trans-unit>
<trans-unit id="sd1_sf11_tu1" resname="sd1_1" restype="x-paragraph" xml:space="preserve">
<source xml:lang="en"></source>
<target xml:lang="pt"></target>
</trans-unit>
<trans-unit id="tu79" xml:space="preserve">
<source xml:lang="en"><x id="1"/></source>
<target xml:lang="pt"><x id="1"/></target>
</trans-unit>
<trans-unit id="tu80" xml:space="preserve">
<source xml:lang="en"><g id="1">Wrap</g>: Tiles (u,v) at integer junctions. For example, if u ranges from 0.0 to 3.0, the texture repeats three times on the U axis</source>
<target xml:lang="pt"><g id="1">Wrap</g>: Tiles (u,v) at integer junctions. For example, if u ranges from 0.0 to 3.0, the texture repeats three times on the U axis</target>
</trans-unit>
<trans-unit id="tu81" xml:space="preserve">
<source xml:lang="en"><x id="1"/></source>
<target xml:lang="pt"><x id="1"/></target>
</trans-unit>
<trans-unit id="sd1_sf15_tu1" resname="sd1_1" restype="x-paragraph" xml:space="preserve">
<source xml:lang="en"></source>
<target xml:lang="pt"></target>
</trans-unit>
<trans-unit id="tu82" xml:space="preserve">
<source xml:lang="en"><x id="1"/><g id="2">Mirror</g>: Flips (u,v) at integer junctions. For example, if u ranges from 0.0 to 1.0, the texture is displayed as expected; but from 1.0 to 2.0, the texture is mirrored </source>
<target xml:lang="pt"><x id="1"/><g id="2">Mirror</g>: Flips (u,v) at integer junctions. For example, if u ranges from 0.0 to 1.0, the texture is displayed as expected; but from 1.0 to 2.0, the texture is mirrored </target>
</trans-unit>
<trans-unit id="tu83" xml:space="preserve">
<source xml:lang="en"><x id="1"/></source>
<target xml:lang="pt"><x id="1"/></target>
</trans-unit>
<trans-unit id="sd1_sf19_tu1" resname="sd1_1" restype="x-paragraph" xml:space="preserve">
<source xml:lang="en"></source>
<target xml:lang="pt"></target>
</trans-unit>
<trans-unit id="tu84" xml:space="preserve">
<source xml:lang="en"><x id="1"/></source>
<target xml:lang="pt"><x id="1"/></target>
</trans-unit>
<trans-unit id="tu85" xml:space="preserve">
<source xml:lang="en"><g id="1">Clamp</g>: Clamps (u,v) to the range (0.0, 1.0)</source>
<target xml:lang="pt"><g id="1">Clamp</g>: Clamps (u,v) to the range (0.0, 1.0)</target>
</trans-unit>
<trans-unit id="tu86" xml:space="preserve">
<source xml:lang="en"><x id="1"/></source>
<target xml:lang="pt"><x id="1"/></target>
</trans-unit>
<trans-unit id="tu87" xml:space="preserve">
<source xml:lang="en">Scale</source>
<target xml:lang="pt">Scale</target>
</trans-unit>
<trans-unit id="tu88" xml:space="preserve">
<source xml:lang="en">A scale applied to (u,v)</source>
<target xml:lang="pt">A scale applied to (u,v)</target>
</trans-unit>
<trans-unit id="tu89" xml:space="preserve">
<source xml:lang="en">Offset</source>
<target xml:lang="pt">Offset</target>
</trans-unit>
<trans-unit id="tu90" xml:space="preserve">
<source xml:lang="en">An offset applied to (u,v)</source>
<target xml:lang="pt">An offset applied to (u,v)</target>
</trans-unit>
<trans-unit id="tu91" xml:space="preserve">
<source xml:lang="en">See also</source>
<target xml:lang="pt">See also</target>
</trans-unit>
<trans-unit id="tu92" xml:space="preserve">
<source xml:lang="en"><g id="1">Material attributes</g></source>
<target xml:lang="pt"><g id="1">Material attributes</g></target>
</trans-unit>
<trans-unit id="tu93" xml:space="preserve">
<source xml:lang="en"><g id="1">Material layers</g></source>
<target xml:lang="pt"><g id="1">Material layers</g></target>
</trans-unit>
<trans-unit id="tu94" xml:space="preserve">
<source xml:lang="en"><g id="1">Material slots</g></source>
<target xml:lang="pt"><g id="1">Material slots</g></target>
</trans-unit>
<trans-unit id="tu95" xml:space="preserve">
<source xml:lang="en"><g id="1">Materials for developers</g></source>
<target xml:lang="pt"><g id="1">Materials for developers</g></target>
</trans-unit>
</body>
</file>
</xliff>
