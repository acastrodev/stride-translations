<?xml version="1.0" encoding="UTF-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:okp="okapi-framework:xliff-extensions" xmlns:its="http://www.w3.org/2005/11/its" xmlns:itsxlf="http://www.w3.org/ns/its-xliff/" its:version="2.0">
<file original="/D:/repos/rr/source/manual/navigation/navigation-components.md" source-language="en" target-language="pt" datatype="x-text/x-markdown" okp:inputEncoding="UTF-8">
<body>
<trans-unit id="tu1" xml:space="preserve">
<source xml:lang="en">Navigation components</source>
<target xml:lang="pt">Navigation components</target>
</trans-unit>
<trans-unit id="tu2" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Beginner<x id="2"/>
<x id="3"/>Level designer<x id="4"/>
<x id="5"/>Programmer<x id="6"/></source>
<target xml:lang="pt"><x id="1"/>Beginner<x id="2"/>
<x id="3"/>Level designer<x id="4"/>
<x id="5"/>Programmer<x id="6"/></target>
</trans-unit>
<trans-unit id="tu3" xml:space="preserve">
<source xml:lang="en"><g id="1">Navigation components</g> allow entities to use <g id="2">navigation meshes</g> to find paths through the scene. Alternatively, if you enable <g id="3">dynamic navigation</g> in Game Settings, entities can generate their own navigation meshes.</source>
<target xml:lang="pt"><g id="1">Navigation components</g> allow entities to use <g id="2">navigation meshes</g> to find paths through the scene. Alternatively, if you enable <g id="3">dynamic navigation</g> in Game Settings, entities can generate their own navigation meshes.</target>
</trans-unit>
<trans-unit id="tu4" xml:space="preserve">
<source xml:lang="en">Add a navigation component</source>
<target xml:lang="pt">Add a navigation component</target>
</trans-unit>
<trans-unit id="tu5" xml:space="preserve">
<source xml:lang="en">Select an entity you want to use navigation.</source>
<target xml:lang="pt">Select an entity you want to use navigation.</target>
</trans-unit>
<trans-unit id="tu6" xml:space="preserve">
<source xml:lang="en">In the <g id="1">Property Grid</g>, click <g id="2">Add component</g> and select <g id="3">Navigation</g>.</source>
<target xml:lang="pt">In the <g id="1">Property Grid</g>, click <g id="2">Add component</g> and select <g id="3">Navigation</g>.</target>
</trans-unit>
<trans-unit id="tu7" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Add navigation component<x id="2"/></source>
<target xml:lang="pt"><x id="1"/>Add navigation component<x id="2"/></target>
</trans-unit>
<trans-unit id="tu8" xml:space="preserve">
<source xml:lang="en">Game Studio adds a navigation component to the entity.</source>
<target xml:lang="pt">Game Studio adds a navigation component to the entity.</target>
</trans-unit>
<trans-unit id="tu9" xml:space="preserve">
<source xml:lang="en">Under the <g id="1">Navigation</g> component properties, next to <g id="2">Navigation mesh</g>, click <x id="3"/>Hand icon<x id="4"/> (<g id="5">Select an asset</g>):</source>
<target xml:lang="pt">Under the <g id="1">Navigation</g> component properties, next to <g id="2">Navigation mesh</g>, click <x id="3"/>Hand icon<x id="4"/> (<g id="5">Select an asset</g>):</target>
</trans-unit>
<trans-unit id="tu10" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Select an asset<x id="2"/></source>
<target xml:lang="pt"><x id="1"/>Select an asset<x id="2"/></target>
</trans-unit>
<trans-unit id="tu11" xml:space="preserve">
<source xml:lang="en">The <g id="1">Select an asset</g> window opens.</source>
<target xml:lang="pt">The <g id="1">Select an asset</g> window opens.</target>
</trans-unit>
<trans-unit id="tu12" xml:space="preserve">
<source xml:lang="en">Select the <g id="1">navigation mesh</g> you want the entity to use and click <g id="2">OK</g>.</source>
<target xml:lang="pt">Select the <g id="1">navigation mesh</g> you want the entity to use and click <g id="2">OK</g>.</target>
</trans-unit>
<trans-unit id="tu13" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Choose navigation mesh<x id="2"/></source>
<target xml:lang="pt"><x id="1"/>Choose navigation mesh<x id="2"/></target>
</trans-unit>
<trans-unit id="tu14" xml:space="preserve">
<source xml:lang="en">Alternatively, if you want this entity to navigate dynamically by generating its own navigation mesh, leave the <g id="1">Navigation mesh</g> field empty. For more information, see <g id="2">Dynamic navigation</g>.</source>
<target xml:lang="pt">Alternatively, if you want this entity to navigate dynamically by generating its own navigation mesh, leave the <g id="1">Navigation mesh</g> field empty. For more information, see <g id="2">Dynamic navigation</g>.</target>
</trans-unit>
<trans-unit id="tu15" xml:space="preserve">
<source xml:lang="en">Under <g id="1">Group</g>, select the navigation group the entity should belong to. The entity uses the navigation properties you set in this group.</source>
<target xml:lang="pt">Under <g id="1">Group</g>, select the navigation group the entity should belong to. The entity uses the navigation properties you set in this group.</target>
</trans-unit>
<trans-unit id="tu16" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Choose navigation group<x id="2"/></source>
<target xml:lang="pt"><x id="1"/>Choose navigation group<x id="2"/></target>
</trans-unit>
<trans-unit id="tu17" xml:space="preserve">
<source xml:lang="en">Use navigation components in scripts</source>
<target xml:lang="pt">Use navigation components in scripts</target>
</trans-unit>
<trans-unit id="tu18" xml:space="preserve">
<source xml:lang="en">For example:</source>
<target xml:lang="pt">For example:</target>
</trans-unit>
<trans-unit id="tu19" xml:space="preserve">
<source xml:lang="en">void Move(Vector3 from, Vector3 to)
{
	var navigationComponent = Entity.Get&lt;NavigationComponent>();
	List&lt;Vector3> path = new List&lt;Vector3>();
	if(navigationComponent.TryFindPath(from, to, path))
	{
		// Follow the points in path
	}
	else
	{
		// A path couldn't be found using this navigation mesh
	}
}
</source>
<target xml:lang="pt">void Move(Vector3 from, Vector3 to)
{
	var navigationComponent = Entity.Get&lt;NavigationComponent>();
	List&lt;Vector3> path = new List&lt;Vector3>();
	if(navigationComponent.TryFindPath(from, to, path))
	{
		// Follow the points in path
	}
	else
	{
		// A path couldn't be found using this navigation mesh
	}
}
</target>
</trans-unit>
<trans-unit id="tu20" xml:space="preserve">
<source xml:lang="en">For more information, see the <g id="1">NavigationComponent API documentation</g>.</source>
<target xml:lang="pt">For more information, see the <g id="1">NavigationComponent API documentation</g>.</target>
</trans-unit>
<trans-unit id="tu21" xml:space="preserve">
<source xml:lang="en">See also</source>
<target xml:lang="pt">See also</target>
</trans-unit>
<trans-unit id="tu22" xml:space="preserve">
<source xml:lang="en"><g id="1">Navigation groups</g></source>
<target xml:lang="pt"><g id="1">Navigation groups</g></target>
</trans-unit>
<trans-unit id="tu23" xml:space="preserve">
<source xml:lang="en"><g id="1">Navigation meshes</g></source>
<target xml:lang="pt"><g id="1">Navigation meshes</g></target>
</trans-unit>
<trans-unit id="tu24" xml:space="preserve">
<source xml:lang="en"><g id="1">Navigation bounding boxes</g></source>
<target xml:lang="pt"><g id="1">Navigation bounding boxes</g></target>
</trans-unit>
<trans-unit id="tu25" xml:space="preserve">
<source xml:lang="en"><g id="1">Dynamic navigation</g></source>
<target xml:lang="pt"><g id="1">Dynamic navigation</g></target>
</trans-unit>
</body>
</file>
</xliff>
